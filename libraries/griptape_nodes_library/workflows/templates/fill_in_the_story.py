# /// script
# dependencies = []
# 
# [tool.griptape-nodes]
# name = "fill_in_the_story_4"
# schema_version = "0.11.0"
# engine_version_created_with = "0.60.2"
# node_libraries_referenced = [["Griptape Nodes Library", "0.50.0"]]
# node_types_used = [["Griptape Nodes Library", "Agent"], ["Griptape Nodes Library", "AudioDetails"], ["Griptape Nodes Library", "CombineAudio"], ["Griptape Nodes Library", "DisplayText"], ["Griptape Nodes Library", "ElevenLabsMusicGeneration"], ["Griptape Nodes Library", "ElevenLabsTextToSpeechGeneration"], ["Griptape Nodes Library", "EndFlow"], ["Griptape Nodes Library", "ExecutePython"], ["Griptape Nodes Library", "KeyValuePair"], ["Griptape Nodes Library", "ListToDictKeys"], ["Griptape Nodes Library", "Math"], ["Griptape Nodes Library", "MergeKeyValuePairs"], ["Griptape Nodes Library", "MergeTexts"], ["Griptape Nodes Library", "Note"], ["Griptape Nodes Library", "Ruleset"], ["Griptape Nodes Library", "SeedreamImageGeneration"], ["Griptape Nodes Library", "SplitText"], ["Griptape Nodes Library", "StartFlow"], ["Griptape Nodes Library", "TextInput"], ["Griptape Nodes Library", "ToText"]]
# is_griptape_provided = true
# description = "Create vocal and music tracks with a fill-in-the-blank story workflow."
# image = "https://raw.githubusercontent.com/griptape-ai/griptape-nodes/refs/heads/main/libraries/griptape_nodes_library/workflows/templates/thumbnail_fill_in_the_story.webp"
# is_template = true
# creation_date = 2025-10-26T17:03:26.629005Z
# last_modified_date = 2025-10-26T17:03:26.660896Z
# workflow_shape = "{\"inputs\":{\"Start Flow\":{\"execution_environment\":{\"name\":\"execution_environment\",\"tooltip\":\"Environment that the node should execute in\",\"type\":\"str\",\"input_types\":[\"str\"],\"output_type\":\"str\",\"default_value\":\"Local Execution\",\"tooltip_as_input\":null,\"tooltip_as_property\":null,\"tooltip_as_output\":null,\"ui_options\":{\"simple_dropdown\":[\"Local Execution\",\"Private Execution\",\"Griptape Cloud Library\"],\"show_search\":true,\"search_filter\":\"\",\"hide\":true},\"settable\":true,\"is_user_defined\":true,\"parent_container_name\":null,\"parent_element_name\":null},\"job_group\":{\"name\":\"job_group\",\"tooltip\":\"Groupings of multiple nodes to send up as a Deadline Cloud job.\",\"type\":\"str\",\"input_types\":[\"str\"],\"output_type\":\"str\",\"default_value\":\"\",\"tooltip_as_input\":null,\"tooltip_as_property\":null,\"tooltip_as_output\":null,\"ui_options\":{\"hide\":true},\"settable\":true,\"is_user_defined\":true,\"parent_container_name\":null,\"parent_element_name\":null},\"exec_out\":{\"name\":\"exec_out\",\"tooltip\":\"Connection to the next node in the execution chain\",\"type\":\"parametercontroltype\",\"input_types\":[\"parametercontroltype\"],\"output_type\":\"parametercontroltype\",\"default_value\":null,\"tooltip_as_input\":null,\"tooltip_as_property\":null,\"tooltip_as_output\":null,\"ui_options\":{\"display_name\":\"Flow Out\"},\"settable\":true,\"is_user_defined\":true,\"parent_container_name\":null,\"parent_element_name\":null},\"topic\":{\"name\":\"topic\",\"tooltip\":\"A story topic\",\"type\":\"str\",\"input_types\":[\"str\"],\"output_type\":\"str\",\"default_value\":\"\",\"tooltip_as_input\":null,\"tooltip_as_property\":null,\"tooltip_as_output\":null,\"ui_options\":{\"placeholder_text\":\"Any additional context for the Agent.\",\"is_custom\":true,\"is_user_added\":true,\"hide\":false,\"tooltip\":\"A story topic\"},\"settable\":true,\"is_user_defined\":true,\"parent_container_name\":\"\",\"parent_element_name\":null}}},\"outputs\":{\"End Flow\":{\"execution_environment\":{\"name\":\"execution_environment\",\"tooltip\":\"Environment that the node should execute in\",\"type\":\"str\",\"input_types\":[\"str\"],\"output_type\":\"str\",\"default_value\":\"Local Execution\",\"tooltip_as_input\":null,\"tooltip_as_property\":null,\"tooltip_as_output\":null,\"ui_options\":{\"simple_dropdown\":[\"Local Execution\",\"Private Execution\",\"Griptape Cloud Library\"],\"show_search\":true,\"search_filter\":\"\",\"hide\":true},\"settable\":true,\"is_user_defined\":true,\"parent_container_name\":null,\"parent_element_name\":null},\"job_group\":{\"name\":\"job_group\",\"tooltip\":\"Groupings of multiple nodes to send up as a Deadline Cloud job.\",\"type\":\"str\",\"input_types\":[\"str\"],\"output_type\":\"str\",\"default_value\":\"\",\"tooltip_as_input\":null,\"tooltip_as_property\":null,\"tooltip_as_output\":null,\"ui_options\":{\"hide\":true},\"settable\":true,\"is_user_defined\":true,\"parent_container_name\":null,\"parent_element_name\":null},\"exec_in\":{\"name\":\"exec_in\",\"tooltip\":\"Control path when the flow completed successfully\",\"type\":\"parametercontroltype\",\"input_types\":[\"parametercontroltype\"],\"output_type\":\"parametercontroltype\",\"default_value\":null,\"tooltip_as_input\":null,\"tooltip_as_property\":null,\"tooltip_as_output\":null,\"ui_options\":{\"display_name\":\"Succeeded\"},\"settable\":true,\"is_user_defined\":true,\"parent_container_name\":null,\"parent_element_name\":null},\"failed\":{\"name\":\"failed\",\"tooltip\":\"Control path when the flow failed\",\"type\":\"parametercontroltype\",\"input_types\":[\"parametercontroltype\"],\"output_type\":\"parametercontroltype\",\"default_value\":null,\"tooltip_as_input\":null,\"tooltip_as_property\":null,\"tooltip_as_output\":null,\"ui_options\":{\"display_name\":\"Failed\"},\"settable\":true,\"is_user_defined\":true,\"parent_container_name\":null,\"parent_element_name\":null},\"was_successful\":{\"name\":\"was_successful\",\"tooltip\":\"Indicates whether it completed without errors.\",\"type\":\"bool\",\"input_types\":[\"bool\"],\"output_type\":\"bool\",\"default_value\":false,\"tooltip_as_input\":null,\"tooltip_as_property\":null,\"tooltip_as_output\":null,\"ui_options\":{},\"settable\":false,\"is_user_defined\":true,\"parent_container_name\":null,\"parent_element_name\":null},\"result_details\":{\"name\":\"result_details\",\"tooltip\":\"Details about the operation result\",\"type\":\"str\",\"input_types\":[\"str\"],\"output_type\":\"str\",\"default_value\":null,\"tooltip_as_input\":null,\"tooltip_as_property\":null,\"tooltip_as_output\":null,\"ui_options\":{\"multiline\":true,\"placeholder_text\":\"Details about the completion or failure will be shown here.\"},\"settable\":false,\"is_user_defined\":true,\"parent_container_name\":null,\"parent_element_name\":null},\"image_url\":{\"name\":\"image_url\",\"tooltip\":\"New parameter\",\"type\":\"ImageUrlArtifact\",\"input_types\":[\"ImageUrlArtifact\"],\"output_type\":\"ImageUrlArtifact\",\"default_value\":\"\",\"tooltip_as_input\":null,\"tooltip_as_property\":null,\"tooltip_as_output\":null,\"ui_options\":{\"is_full_width\":true,\"pulse_on_run\":true,\"is_custom\":true,\"is_user_added\":true},\"settable\":true,\"is_user_defined\":true,\"parent_container_name\":\"\",\"parent_element_name\":null},\"mixed_audio\":{\"name\":\"mixed_audio\",\"tooltip\":\"New parameter\",\"type\":\"AudioUrlArtifact\",\"input_types\":[\"any\"],\"output_type\":\"AudioUrlArtifact\",\"default_value\":\"\",\"tooltip_as_input\":null,\"tooltip_as_property\":null,\"tooltip_as_output\":null,\"ui_options\":{\"pulse_on_run\":true,\"is_custom\":true,\"is_user_added\":true},\"settable\":true,\"is_user_defined\":true,\"parent_container_name\":\"\",\"parent_element_name\":null}}}}"
# 
# ///

import argparse
import asyncio
import json
import pickle
from griptape.rules.ruleset import Ruleset
from griptape_nodes.bootstrap.workflow_executors.local_workflow_executor import LocalWorkflowExecutor
from griptape_nodes.bootstrap.workflow_executors.workflow_executor import WorkflowExecutor
from griptape_nodes.drivers.storage.storage_backend import StorageBackend
from griptape_nodes.node_library.library_registry import IconVariant, NodeDeprecationMetadata, NodeMetadata
from griptape_nodes.retained_mode.events.connection_events import CreateConnectionRequest
from griptape_nodes.retained_mode.events.flow_events import CreateFlowRequest, GetTopLevelFlowRequest, GetTopLevelFlowResultSuccess
from griptape_nodes.retained_mode.events.library_events import GetAllInfoForAllLibrariesRequest, GetAllInfoForAllLibrariesResultSuccess, ReloadAllLibrariesRequest
from griptape_nodes.retained_mode.events.node_events import CreateNodeRequest
from griptape_nodes.retained_mode.events.parameter_events import AddParameterToNodeRequest, AlterParameterDetailsRequest, SetParameterValueRequest
from griptape_nodes.retained_mode.griptape_nodes import GriptapeNodes
from griptape_nodes_library.audio.audio_url_artifact import AudioUrlArtifact

response = GriptapeNodes.LibraryManager().get_all_info_for_all_libraries_request(GetAllInfoForAllLibrariesRequest())

if isinstance(response, GetAllInfoForAllLibrariesResultSuccess) and len(response.library_name_to_library_info.keys()) < 1:
    GriptapeNodes.handle_request(ReloadAllLibrariesRequest())

context_manager = GriptapeNodes.ContextManager()

if not context_manager.has_current_workflow():
    context_manager.push_workflow(workflow_name='fill_in_the_story_4')

"""
1. We've collated all of the unique parameter values into a dictionary so that we do not have to duplicate them.
   This minimizes the size of the code, especially for large objects like serialized image files.
2. We're using a prefix so that it's clear which Flow these values are associated with.
3. The values are serialized using pickle, which is a binary format. This makes them harder to read, but makes
   them consistently save and load. It allows us to serialize complex objects like custom classes, which otherwise
   would be difficult to serialize.
"""
top_level_unique_values_dict = {'4b5833de-2ef8-4744-b445-f221923b8ab3': pickle.loads(b'\x80\x04\x95\x13\x00\x00\x00\x00\x00\x00\x00\x8c\x0fLocal Execution\x94.'), 'b87b544c-b5c9-488f-90bf-d0a5f8cd19a9': pickle.loads(b'\x80\x04\x95\x04\x00\x00\x00\x00\x00\x00\x00\x8c\x00\x94.'), 'a8732fcd-9ae2-4088-aa7b-f34542d9079b': pickle.loads(b'\x80\x04\x95\x12\x00\x00\x00\x00\x00\x00\x00\x8c\x0eMadlibs_expert\x94.'), '69597aaf-2872-40b4-9816-a5d80bc932ac': pickle.loads(b'\x80\x04\x95X\x01\x00\x00\x00\x00\x00\x00XQ\x01\x00\x00You create hilarious fill-in-the-blank stories called StoryFills.\nWhenever you want the player to supply a word, use <ALL CAPS> placeholders like <NOUN>, <VERB>, or <ADJECTIVE>.\nFor repeats, add _2, _3, etc. (e.g. <NAME> met <NAME_2>).\nKeep your stories funny, creative, and short enough to fill in easily\n\nThis story will be read aloud.\x94.'), 'c02293c4-5a48-4caa-bcee-dfa0d819548a': pickle.loads(b'\x80\x04\x95J\x03\x00\x00\x00\x00\x00\x00\x8c\x16griptape.rules.ruleset\x94\x8c\x07Ruleset\x94\x93\x94)\x81\x94}\x94(\x8c\x04type\x94\x8c\x07Ruleset\x94\x8c\x0bmodule_name\x94\x8c\x16griptape.rules.ruleset\x94\x8c\x02id\x94\x8c d5b61a6f74d14775a2427d40e1588f08\x94\x8c\x04name\x94\x8c\x0eMadlibs_expert\x94\x8c\x0eruleset_driver\x94\x8c-griptape.drivers.ruleset.local_ruleset_driver\x94\x8c\x12LocalRulesetDriver\x94\x93\x94)\x81\x94}\x94(h\x05\x8c\x12LocalRulesetDriver\x94h\x07\x8c-griptape.drivers.ruleset.local_ruleset_driver\x94\x8c\x0fraise_not_found\x94\x88\x8c\x0bpersist_dir\x94Nub\x8c\x04meta\x94}\x94\x8c\x05rules\x94]\x94(\x8c\x13griptape.rules.rule\x94\x8c\x04Rule\x94\x93\x94)\x81\x94}\x94(h\x05\x8c\x04Rule\x94h\x07\x8c\x13griptape.rules.rule\x94h\x17}\x94\x8c\x05value\x94X1\x01\x00\x00You create hilarious fill-in-the-blank stories called StoryFills.\nWhenever you want the player to supply a word, use <ALL CAPS> placeholders like <NOUN>, <VERB>, or <ADJECTIVE>.\nFor repeats, add _2, _3, etc. (e.g. <NAME> met <NAME_2>).\nKeep your stories funny, creative, and short enough to fill in easily\x94ubh\x1d)\x81\x94}\x94(h\x05h h\x07h!h\x17}\x94h#\x8c\x1eThis story will be read aloud.\x94ubeub.'), '296e2f16-f25c-47f5-89f0-744df56c25a8': pickle.loads(b"\x80\x04\x95\x99\x00\x00\x00\x00\x00\x00\x00\x8c\x95import re\n\n# Find all ALL CAPS words (with optional hyphens)\ncaps_words = re.findall(r'<([A-Z0-9_]+)>', story)\n\nprint(caps_words)\nresult = caps_words\x94."), 'e5614552-9a15-4bf1-940e-11e5b1144bae': pickle.loads(b'\x80\x04\x95\x1d\x02\x00\x00\x00\x00\x00\x00}\x94\x8c\x05story\x94X\x0b\x02\x00\x00[dramatic music] On Halloween night, a <ADJECTIVE> capybara named <NAME> put on a <ADJECTIVE_2> <COSTUME> and went <VERB> door to door for <CANDY_TYPE>. Suddenly, out of the <PLACE>, <NUMBER> REAL goblins appeared, <VERB_2> and <VERB_3> with <NOUN> in their hands! [goblin growl] <NAME> froze like a <ANIMAL> caught in a <NOUN_2> trap. [heartbeat] But then, with a <ADJECTIVE_3> grin, <NAME> pulled out a <NOUN_3> and shouted, "[excited] Trick or treat, goblins! Ready for a <ADJECTIVE_4> candy battle?" [epic battle music]\x94s.'), '582ab304-cdaf-4096-8aef-faa17de6353a': pickle.loads(b"\x80\x04\x95\xc5\x00\x00\x00\x00\x00\x00\x00\x8c\xc1['ADJECTIVE', 'NAME', 'ADJECTIVE_2', 'COSTUME', 'VERB', 'CANDY_TYPE', 'PLACE', 'NUMBER', 'VERB_2', 'VERB_3', 'NOUN', 'NAME', 'ANIMAL', 'NOUN_2', 'ADJECTIVE_3', 'NAME', 'NOUN_3', 'ADJECTIVE_4']\n\x94."), '1cbb641b-ee98-49ba-836a-3a354638ceac': pickle.loads(b'\x80\x04\x89.'), 'e431f359-9857-4986-87c3-91745f92bbf7': pickle.loads(b'\x80\x04\x950\x00\x00\x00\x00\x00\x00\x00\x8c,<Results will appear when the node executes>\x94.'), 'e994b6aa-d218-4ab8-90e3-b820b36f81ed': pickle.loads(b'\x80\x04\x95\t\x00\x00\x00\x00\x00\x00\x00\x8c\x05story\x94.'), '97dcbe85-3d0a-401d-9e31-238903edd69f': pickle.loads(b'\x80\x04\x95\x12\x02\x00\x00\x00\x00\x00\x00X\x0b\x02\x00\x00[dramatic music] On Halloween night, a <ADJECTIVE> capybara named <NAME> put on a <ADJECTIVE_2> <COSTUME> and went <VERB> door to door for <CANDY_TYPE>. Suddenly, out of the <PLACE>, <NUMBER> REAL goblins appeared, <VERB_2> and <VERB_3> with <NOUN> in their hands! [goblin growl] <NAME> froze like a <ANIMAL> caught in a <NOUN_2> trap. [heartbeat] But then, with a <ADJECTIVE_3> grin, <NAME> pulled out a <NOUN_3> and shouted, "[excited] Trick or treat, goblins! Ready for a <ADJECTIVE_4> candy battle?" [epic battle music]\x94.'), '438bacc2-1c35-44dc-8d8a-10b79b4cc933': pickle.loads(b'\x80\x04\x95\x1d\x02\x00\x00\x00\x00\x00\x00}\x94\x8c\x05story\x94X\x0b\x02\x00\x00[dramatic music] On Halloween night, a <ADJECTIVE> capybara named <NAME> put on a <ADJECTIVE_2> <COSTUME> and went <VERB> door to door for <CANDY_TYPE>. Suddenly, out of the <PLACE>, <NUMBER> REAL goblins appeared, <VERB_2> and <VERB_3> with <NOUN> in their hands! [goblin growl] <NAME> froze like a <ANIMAL> caught in a <NOUN_2> trap. [heartbeat] But then, with a <ADJECTIVE_3> grin, <NAME> pulled out a <NOUN_3> and shouted, "[excited] Trick or treat, goblins! Ready for a <ADJECTIVE_4> candy battle?" [epic battle music]\x94s.'), '7cfaef67-25b1-46ed-8e99-0b206ddbfa8c': pickle.loads(b'\x80\x04\x952\x02\x00\x00\x00\x00\x00\x00X+\x02\x00\x00import ast\nimport re\n\ntoken_re = re.compile(r\'<([A-Z][A-Z0-9_]*)>\')\n\ndef fill_story(data: dict) -> str:\n    # Parse stringified dict safely\n    keys = data["story_keys"]\n    if isinstance(keys, str):\n        keys = ast.literal_eval(keys)\n\n    story = data["story"]\n\n    def repl(m):\n        name = m.group(1)\n        val = keys.get(name)\n        if isinstance(val, str):\n            val = val.strip()\n        return val if val else m.group(0)\n\n    return token_re.sub(repl, story)\n\ndata = {\'story_keys\': story_keys, \'story\': story}\nprint(fill_story(data))\x94.'), '71c7dada-7209-48c1-afec-efe049175ebb': pickle.loads(b'\x80\x04\x95\x1e\x03\x00\x00\x00\x00\x00\x00}\x94(\x8c\nstory_keys\x94\x8c\xf0{\'ADJECTIVE\': \'\', \'NAME\': \'\', \'ADJECTIVE_2\': \'\', \'COSTUME\': \'\', \'VERB\': \'\', \'CANDY_TYPE\': \'\', \'PLACE\': \'\', \'NUMBER\': \'\', \'VERB_2\': \'\', \'VERB_3\': \'\', \'NOUN\': \'\', \'ANIMAL\': \'\', \'NOUN_2\': \'\', \'ADJECTIVE_3\': \'\', \'NOUN_3\': \'\', \'ADJECTIVE_4\': \'\'}\x94\x8c\x05story\x94X\x0b\x02\x00\x00[dramatic music] On Halloween night, a <ADJECTIVE> capybara named <NAME> put on a <ADJECTIVE_2> <COSTUME> and went <VERB> door to door for <CANDY_TYPE>. Suddenly, out of the <PLACE>, <NUMBER> REAL goblins appeared, <VERB_2> and <VERB_3> with <NOUN> in their hands! [goblin growl] <NAME> froze like a <ANIMAL> caught in a <NOUN_2> trap. [heartbeat] But then, with a <ADJECTIVE_3> grin, <NAME> pulled out a <NOUN_3> and shouted, "[excited] Trick or treat, goblins! Ready for a <ADJECTIVE_4> candy battle?" [epic battle music]\x94u.'), 'a6e46050-0c26-467e-8faf-7ade6dae3f62': pickle.loads(b'\x80\x04\x95\x13\x02\x00\x00\x00\x00\x00\x00X\x0c\x02\x00\x00[dramatic music] On Halloween night, a <ADJECTIVE> capybara named <NAME> put on a <ADJECTIVE_2> <COSTUME> and went <VERB> door to door for <CANDY_TYPE>. Suddenly, out of the <PLACE>, <NUMBER> REAL goblins appeared, <VERB_2> and <VERB_3> with <NOUN> in their hands! [goblin growl] <NAME> froze like a <ANIMAL> caught in a <NOUN_2> trap. [heartbeat] But then, with a <ADJECTIVE_3> grin, <NAME> pulled out a <NOUN_3> and shouted, "[excited] Trick or treat, goblins! Ready for a <ADJECTIVE_4> candy battle?" [epic battle music]\n\x94.'), 'a2bbcd7f-d0f6-499e-94a2-2dab0670e7bc': pickle.loads(b'\x80\x04\x95$\x03\x00\x00\x00\x00\x00\x00]\x94(}\x94\x8c\nstory_keys\x94\x8c\xf0{\'ADJECTIVE\': \'\', \'NAME\': \'\', \'ADJECTIVE_2\': \'\', \'COSTUME\': \'\', \'VERB\': \'\', \'CANDY_TYPE\': \'\', \'PLACE\': \'\', \'NUMBER\': \'\', \'VERB_2\': \'\', \'VERB_3\': \'\', \'NOUN\': \'\', \'ANIMAL\': \'\', \'NOUN_2\': \'\', \'ADJECTIVE_3\': \'\', \'NOUN_3\': \'\', \'ADJECTIVE_4\': \'\'}\x94s}\x94\x8c\x05story\x94X\x0b\x02\x00\x00[dramatic music] On Halloween night, a <ADJECTIVE> capybara named <NAME> put on a <ADJECTIVE_2> <COSTUME> and went <VERB> door to door for <CANDY_TYPE>. Suddenly, out of the <PLACE>, <NUMBER> REAL goblins appeared, <VERB_2> and <VERB_3> with <NOUN> in their hands! [goblin growl] <NAME> froze like a <ANIMAL> caught in a <NOUN_2> trap. [heartbeat] But then, with a <ADJECTIVE_3> grin, <NAME> pulled out a <NOUN_3> and shouted, "[excited] Trick or treat, goblins! Ready for a <ADJECTIVE_4> candy battle?" [epic battle music]\x94se.'), '5823b31e-ad66-4a2c-a7dc-7cea4affc557': pickle.loads(b"\x80\x04\x95\x04\x01\x00\x00\x00\x00\x00\x00}\x94\x8c\nstory_keys\x94\x8c\xf0{'ADJECTIVE': '', 'NAME': '', 'ADJECTIVE_2': '', 'COSTUME': '', 'VERB': '', 'CANDY_TYPE': '', 'PLACE': '', 'NUMBER': '', 'VERB_2': '', 'VERB_3': '', 'NOUN': '', 'ANIMAL': '', 'NOUN_2': '', 'ADJECTIVE_3': '', 'NOUN_3': '', 'ADJECTIVE_4': ''}\x94s."), 'ad75d58d-61f7-4f90-a067-1e8eddba8e74': pickle.loads(b'\x80\x04\x95\x0e\x00\x00\x00\x00\x00\x00\x00\x8c\nstory_keys\x94.'), 'd19a142c-73e3-4cc5-b577-4c9d50da3683': pickle.loads(b"\x80\x04\x95\xf4\x00\x00\x00\x00\x00\x00\x00\x8c\xf0{'ADJECTIVE': '', 'NAME': '', 'ADJECTIVE_2': '', 'COSTUME': '', 'VERB': '', 'CANDY_TYPE': '', 'PLACE': '', 'NUMBER': '', 'VERB_2': '', 'VERB_3': '', 'NOUN': '', 'ANIMAL': '', 'NOUN_2': '', 'ADJECTIVE_3': '', 'NOUN_3': '', 'ADJECTIVE_4': ''}\x94."), 'e80e1f2d-c078-4c21-9aeb-b7552ea90d06': pickle.loads(b"\x80\x04\x95\x04\x01\x00\x00\x00\x00\x00\x00}\x94\x8c\nstory_keys\x94\x8c\xf0{'ADJECTIVE': '', 'NAME': '', 'ADJECTIVE_2': '', 'COSTUME': '', 'VERB': '', 'CANDY_TYPE': '', 'PLACE': '', 'NUMBER': '', 'VERB_2': '', 'VERB_3': '', 'NOUN': '', 'ANIMAL': '', 'NOUN_2': '', 'ADJECTIVE_3': '', 'NOUN_3': '', 'ADJECTIVE_4': ''}\x94s."), 'f7b51772-0992-46f8-8a05-a894a4d3cbf4': pickle.loads(b'\x80\x04\x95\xc6\x00\x00\x00\x00\x00\x00\x00}\x94(\x8c\tADJECTIVE\x94\x8c\x00\x94\x8c\x04NAME\x94h\x02\x8c\x0bADJECTIVE_2\x94h\x02\x8c\x07COSTUME\x94h\x02\x8c\x04VERB\x94h\x02\x8c\nCANDY_TYPE\x94h\x02\x8c\x05PLACE\x94h\x02\x8c\x06NUMBER\x94h\x02\x8c\x06VERB_2\x94h\x02\x8c\x06VERB_3\x94h\x02\x8c\x04NOUN\x94h\x02\x8c\x06ANIMAL\x94h\x02\x8c\x06NOUN_2\x94h\x02\x8c\x0bADJECTIVE_3\x94h\x02\x8c\x06NOUN_3\x94h\x02\x8c\x0bADJECTIVE_4\x94h\x02u.'), '9bd18886-9533-4712-8370-5572d8e80239': pickle.loads(b"\x80\x04\x95\xe1\x00\x00\x00\x00\x00\x00\x00\x8c\xdd{'ADJECTIVE': 'loose', 'ADJECTIVE_2': '', 'NAME': 'Jason', 'VERB': '', 'ADVERB': '', 'ADJECTIVE_3': '', 'VERB_2': '', 'VERB_3': '', 'VERB_4': '', 'ADJECTIVE_4': '', 'ADJECTIVE_5': '', 'EXCLAMATION': '', 'ADJECTIVE_6': ''}\x94."), '604300f9-5c3e-4d12-a630-f5a4488cf6f5': pickle.loads(b'\x80\x04\x95\x15\x00\x00\x00\x00\x00\x00\x00\x8c\x11elevenlabs_expert\x94.'), '62377285-6a00-46d7-b3e2-7bca43246525': pickle.loads(b"\x80\x04\x95\xa6\x01\x00\x00\x00\x00\x00\x00X\x9f\x01\x00\x00You liberally use tags to create more interesting stories, including voice-related, sound effects, and even experimental tags. Examples:\n[whispers] this is incredible\n[excited] oh my goodness!\n[gunshot], [clapping]\n[fart]\n[strong French accent] Zat's amazing.\n\nEllipses (...) add pauses and weight.\nCapitalization increases emphasis.\n\nWe'll be reading your story, so use lots of tags to create dynamic storytelling.\x94."), '65fd0616-a18f-49d8-bed6-44452768a4c9': pickle.loads(b"\x80\x04\x95\xb4\x03\x00\x00\x00\x00\x00\x00\x8c\x16griptape.rules.ruleset\x94\x8c\x07Ruleset\x94\x93\x94)\x81\x94}\x94(\x8c\x04type\x94\x8c\x07Ruleset\x94\x8c\x0bmodule_name\x94\x8c\x16griptape.rules.ruleset\x94\x8c\x02id\x94\x8c 5289224473354cd288b482ce5dc07653\x94\x8c\x04name\x94\x8c\x11elevenlabs_expert\x94\x8c\x0eruleset_driver\x94\x8c-griptape.drivers.ruleset.local_ruleset_driver\x94\x8c\x12LocalRulesetDriver\x94\x93\x94)\x81\x94}\x94(h\x05\x8c\x12LocalRulesetDriver\x94h\x07\x8c-griptape.drivers.ruleset.local_ruleset_driver\x94\x8c\x0fraise_not_found\x94\x88\x8c\x0bpersist_dir\x94Nub\x8c\x04meta\x94}\x94\x8c\x05rules\x94]\x94(\x8c\x13griptape.rules.rule\x94\x8c\x04Rule\x94\x93\x94)\x81\x94}\x94(h\x05\x8c\x04Rule\x94h\x07\x8c\x13griptape.rules.rule\x94h\x17}\x94\x8c\x05value\x94X\x03\x01\x00\x00You liberally use tags to create more interesting stories, including voice-related, sound effects, and even experimental tags. Examples:\n[whispers] this is incredible\n[excited] oh my goodness!\n[gunshot], [clapping]\n[fart]\n[strong French accent] Zat's amazing.\x94ubh\x1d)\x81\x94}\x94(h\x05h h\x07h!h\x17}\x94h#\x8cHEllipses (...) add pauses and weight.\nCapitalization increases emphasis.\x94ubh\x1d)\x81\x94}\x94(h\x05h h\x07h!h\x17}\x94h#\x8cPWe'll be reading your story, so use lots of tags to create dynamic storytelling.\x94ubeub."), '3fac0e80-fddf-441a-8664-34f3989162f5': pickle.loads(b'\x80\x04\x95\x0b\x00\x00\x00\x00\x00\x00\x00\x8c\x07bananas\x94.'), '62b1a52f-090a-432a-a6e9-1e7b128855a4': pickle.loads(b'\x80\x04\x95\r\x00\x00\x00\x00\x00\x00\x00\x8c\tCustom...\x94.'), 'a113a55d-4c29-40c1-b42f-d78a1d81d2af': pickle.loads(b'\x80\x04\x95\x18\x00\x00\x00\x00\x00\x00\x00\x8c\x14NOpBlnGInO9m6vDvFkFC\x94.'), '85ea6117-648f-41e3-8cba-4b626fdb8c66': pickle.loads(b'\x80\x04\x95j\t\x00\x00\x00\x00\x00\x00}\x94(\x8c\x04type\x94\x8c\x12GriptapeNodesAgent\x94\x8c\x08rulesets\x94]\x94\x8c\x05rules\x94]\x94\x8c\x02id\x94\x8c 4feff1504b1e4bd6bab2abb9c187b88d\x94\x8c\x13conversation_memory\x94}\x94(h\x01\x8c\x12ConversationMemory\x94\x8c\x04runs\x94]\x94}\x94(h\x01\x8c\x03Run\x94h\x07\x8c b9eba1d9bd48444fbe0e588bbaeac74a\x94\x8c\x04meta\x94N\x8c\x05input\x94}\x94(h\x01\x8c\x0cTextArtifact\x94h\x07\x8c c2f0fa83584b4fb683a897519b4f8eb1\x94\x8c\treference\x94Nh\x11}\x94\x8c\x04name\x94h\x15\x8c\x05value\x94X\xce\x03\x00\x00The following is a fill-in-the-blank story. some of the items have been replaced, but some are missing! If you see a tag (<NAME>, <ADVERB>, etc) go ahead and replace it with something absurd and interesting. It doesn\'t have to make sense - in fact it\'s better if it doesn\'t!\n\nIf you see words surrounded by brackets, those are instructions for the narration prompt. Don\'t replace them. Examples: [dramatic], [laugh], [gasp]\nOutput only the new story.\n[dramatic music] On Halloween night, a <ADJECTIVE> capybara named <NAME> put on a <ADJECTIVE_2> <COSTUME> and went <VERB> door to door for <CANDY_TYPE>. Suddenly, out of the <PLACE>, <NUMBER> REAL goblins appeared, <VERB_2> and <VERB_3> with <NOUN> in their hands! [goblin growl] <NAME> froze like a <ANIMAL> caught in a <NOUN_2> trap. [heartbeat] But then, with a <ADJECTIVE_3> grin, <NAME> pulled out a <NOUN_3> and shouted, "[excited] Trick or treat, goblins! Ready for a <ADJECTIVE_4> candy battle?" [epic battle music]\x94u\x8c\x06output\x94}\x94(h\x01h\x14h\x07\x8c ee4cf82e9fbe4cd3abe6a0ae9fb6bb42\x94h\x16Nh\x11}\x94\x8c\x0fis_react_prompt\x94\x89sh\x18h\x1dh\x19XC\x02\x00\x00[dramatic music] On Halloween night, a fluorescent capybara named Binglebert put on a squishy astronaut helmet and went moonwalking door to door for pickled jellybean soup. Suddenly, out of the refrigerator, 847 REAL goblins appeared, yodeling and breakdancing with rubber chickens in their hands! [goblin growl] Binglebert froze like a confused penguin caught in a marshmallow trap. [heartbeat] But then, with a radioactive grin, Binglebert pulled out a singing toothbrush and shouted, "[excited] Trick or treat, goblins! Ready for a backwards candy battle?" [epic battle music]\x94uuah\x11}\x94\x8c\x08max_runs\x94Nu\x8c\x1cconversation_memory_strategy\x94\x8c\rper_structure\x94\x8c\x05tasks\x94]\x94}\x94(h\x01\x8c\nPromptTask\x94h\x03]\x94h\x05]\x94h\x07\x8c 53c74211718746129517a8cbe5e77fec\x94\x8c\x05state\x94\x8c\x0eState.FINISHED\x94\x8c\nparent_ids\x94]\x94\x8c\tchild_ids\x94]\x94\x8c\x17max_meta_memory_entries\x94K\x14\x8c\x07context\x94}\x94\x8c\rprompt_driver\x94}\x94(h\x01\x8c\x19GriptapeCloudPromptDriver\x94\x8c\x0btemperature\x94G?\xb9\x99\x99\x99\x99\x99\x9a\x8c\nmax_tokens\x94M\x00\xfa\x8c\x06stream\x94\x88\x8c\x0cextra_params\x94}\x94\x8c\x05model\x94\x8c\x18claude-sonnet-4-20250514\x94\x8c\x1astructured_output_strategy\x94\x8c\x04tool\x94u\x8c\x05tools\x94]\x94\x8c\x0cmax_subtasks\x94K\x14uau.'), 'c0fcbffa-1ca6-4f59-8b91-17f4f1f48709': pickle.loads(b'\x80\x04\x95\x1c\x00\x00\x00\x00\x00\x00\x00\x8c\x18claude-sonnet-4-20250514\x94.'), '5a9adbce-494b-4429-aeeb-28aba0b9eae2': pickle.loads(b"\x80\x04\x95\xc9\x01\x00\x00\x00\x00\x00\x00X\xc2\x01\x00\x00The following is a fill-in-the-blank story. some of the items have been replaced, but some are missing! If you see a tag (<NAME>, <ADVERB>, etc) go ahead and replace it with something absurd and interesting. It doesn't have to make sense - in fact it's better if it doesn't!\n\nIf you see words surrounded by brackets, those are instructions for the narration prompt. Don't replace them. Examples: [dramatic], [laugh], [gasp]\nOutput only the new story.\x94."), 'e2f1ad8e-efe1-44dc-8954-07cdc0bf96f9': pickle.loads(b'\x80\x04]\x94.'), '11bcb7d1-a128-4160-800c-6ed8d9f4662b': pickle.loads(b'\x80\x04]\x94.'), '0c6eba99-96fc-4eba-8c01-3c68b76b15fa': pickle.loads(b'\x80\x04\x95J\x02\x00\x00\x00\x00\x00\x00XC\x02\x00\x00[dramatic music] On Halloween night, a fluorescent capybara named Binglebert put on a squishy astronaut helmet and went moonwalking door to door for pickled jellybean soup. Suddenly, out of the refrigerator, 847 REAL goblins appeared, yodeling and breakdancing with rubber chickens in their hands! [goblin growl] Binglebert froze like a confused penguin caught in a marshmallow trap. [heartbeat] But then, with a radioactive grin, Binglebert pulled out a singing toothbrush and shouted, "[excited] Trick or treat, goblins! Ready for a backwards candy battle?" [epic battle music]\x94.'), '7bc4a014-639e-458e-b170-f353dd3ce64c': pickle.loads(b'\x80\x04\x95N\x00\x00\x00\x00\x00\x00\x00\x8cJ[Processing..]\n[Started processing agent..]\n\n[Finished processing agent.]\n\x94.'), '12436802-1100-47aa-b0d6-88da1314e289': pickle.loads(b'\x80\x04\x95>\x00\x00\x00\x00\x00\x00\x00\x8c:Given the following story, generate some background music.\x94.'), '153483c7-c749-4cfe-b621-d53add85a9a5': pickle.loads(b'\x80\x04\x95\x08\x00\x00\x00\x00\x00\x00\x00\x8c\x04\\n\\n\x94.'), '5de5f6f0-540c-4d44-96a3-0b93d9378cd2': pickle.loads(b'\x80\x04\x95\x86\x02\x00\x00\x00\x00\x00\x00X\x7f\x02\x00\x00Given the following story, generate some background music.\n\n[dramatic music] On Halloween night, a fluorescent capybara named Binglebert put on a squishy astronaut helmet and went moonwalking door to door for pickled jellybean soup. Suddenly, out of the refrigerator, 847 REAL goblins appeared, yodeling and breakdancing with rubber chickens in their hands! [goblin growl] Binglebert froze like a confused penguin caught in a marshmallow trap. [heartbeat] But then, with a radioactive grin, Binglebert pulled out a singing toothbrush and shouted, "[excited] Trick or treat, goblins! Ready for a backwards candy battle?" [epic battle music]\x94.'), '33f8563a-237d-4af2-8e56-a115ff73d94a': pickle.loads(b'\x80\x04\x95\x0e\x00\x00\x00\x00\x00\x00\x00\x8c\nparse_list\x94.'), '4b13faa2-46eb-4668-8a48-db632b5224c5': pickle.loads(b'\x80\x04\x95\x0c\x00\x00\x00\x00\x00\x00\x00\x8c\x08newlines\x94.'), '27a2f338-891f-4c7d-9360-b4d4f1333850': pickle.loads(b'\x80\x04\x88.'), '9ffd71bf-c100-4cf0-bcd7-9b57db7a90a8': pickle.loads(b'\x80\x04\x95\xb3\x00\x00\x00\x00\x00\x00\x00]\x94(\x8c\tADJECTIVE\x94\x8c\x04NAME\x94\x8c\x0bADJECTIVE_2\x94\x8c\x07COSTUME\x94\x8c\x04VERB\x94\x8c\nCANDY_TYPE\x94\x8c\x05PLACE\x94\x8c\x06NUMBER\x94\x8c\x06VERB_2\x94\x8c\x06VERB_3\x94\x8c\x04NOUN\x94\x8c\x04NAME\x94\x8c\x06ANIMAL\x94\x8c\x06NOUN_2\x94\x8c\x0bADJECTIVE_3\x94\x8c\x04NAME\x94\x8c\x06NOUN_3\x94\x8c\x0bADJECTIVE_4\x94e.'), '120b3dc9-1929-46f4-b24e-31404c42c0f5': pickle.loads(b'\x80\x04\x95\n\x00\x00\x00\x00\x00\x00\x00G\x00\x00\x00\x00\x00\x00\x00\x00.'), 'ca33b938-78e3-46e4-b6ba-d7af0ee7a3f1': pickle.loads(b'\x80\x04\x95\x0b\x00\x00\x00\x00\x00\x00\x00\x8c\x07UNKNOWN\x94.'), 'dea7bec3-85a6-43ce-a218-7e216f4e195a': pickle.loads(b'\x80\x04K\x00.'), 'f666419a-6d69-473c-8e30-a38ea38bd98f': pickle.loads(b'\x80\x04\x95\xa2\x00\x00\x00\x00\x00\x00\x00\x8c\x9eChoose your voice here, then the ElevenLabs Text to Speech node will generate the narration\n\nElevenLabs voice library: https://elevenlabs.io/app/voice-library\x94.'), 'e3da6be3-1f4c-41c6-9981-586819c5aa8a': pickle.loads(b'\x80\x04\x95\x7f\x00\x00\x00\x00\x00\x00\x00\x8c{Choose your Word Filler story topic. It can be anything you like - for example, a capybara trick or treating for halloween.\x94.'), 'a21fff4c-9653-4d30-b547-e3c0d71f2aa1': pickle.loads(b'\x80\x04\x95 \x00\x00\x00\x00\x00\x00\x00\x8c\x1cWordFill Agent Story Creator\x94.'), '6ccaba6b-b720-42a3-8ee2-93a83227b4b0': pickle.loads(b'\x80\x04\x95P\x00\x00\x00\x00\x00\x00\x00\x8cLExtracts all the important articles of speech that you will get to fill out!\x94.'), '19eec4ed-e6de-4072-ba11-ed1270313212': pickle.loads(b'\x80\x04\x95V\x00\x00\x00\x00\x00\x00\x00\x8cRThe final story - and connected to an agent that will replace any unentered words.\x94.'), '6c6528f5-c7fb-4282-8359-d32b88fdbdbd': pickle.loads(b'\x80\x04\x95/\x00\x00\x00\x00\x00\x00\x00\x8c+Replaces the words in the story with yours.\x94.'), '9d1aef9d-0001-4149-95bb-612baa8164f1': pickle.loads(b'\x80\x04\x95}\x00\x00\x00\x00\x00\x00\x00\x8cyFind the length of the generated audio, add 5 seconds, round up, and make sure the minimum time is at least 10 seconds.  \x94.'), 'af030620-484c-4afc-a5cb-ada5b04da3ad': pickle.loads(b'\x80\x04\x95X\x00\x00\x00\x00\x00\x00\x00\x8cTGenerate the background music using Eleven Labs Music Generation based on the story.\x94.'), '1d6b2a26-8652-4c8c-a4bb-ce0ec8479d95': pickle.loads(b'\x80\x04\x95\xb3\x0c\x00\x00\x00\x00\x00\x00}\x94(\x8c\x04type\x94\x8c\x12GriptapeNodesAgent\x94\x8c\x08rulesets\x94]\x94\x8c\x05rules\x94]\x94\x8c\x02id\x94\x8c 88a908cb1755441b9809bd301ef89f1d\x94\x8c\x13conversation_memory\x94}\x94(h\x01\x8c\x12ConversationMemory\x94\x8c\x04runs\x94]\x94}\x94(h\x01\x8c\x03Run\x94h\x07\x8c c44500f99c874f20a628b06e6f96c573\x94\x8c\x04meta\x94N\x8c\x05input\x94}\x94(h\x01\x8c\x0cTextArtifact\x94h\x07\x8c 6be1fdd8cf454f62b90160c4df61e4b8\x94\x8c\treference\x94Nh\x11}\x94\x8c\x04name\x94h\x15\x8c\x05value\x94X~\x04\x00\x00Create an image generation prompt for the following story. The style should be:Mid-century modern children\xe2\x80\x99s book illustration style, inspired by 1950s UPA animation. Flat, graphic shapes with minimal shading, bold and simplified forms, and expressive character poses. Limited color palette with warm, muted tones and textured backgrounds. Playful and whimsical composition, often with stylized motion lines or abstracted environments. Features hand-painted feel, painterly grain, and charming retro character design with round faces, rosy cheeks, and expressive eyes.\n[dramatic music] On Halloween night, a fluorescent capybara named Binglebert put on a squishy astronaut helmet and went moonwalking door to door for pickled jellybean soup. Suddenly, out of the refrigerator, 847 REAL goblins appeared, yodeling and breakdancing with rubber chickens in their hands! [goblin growl] Binglebert froze like a confused penguin caught in a marshmallow trap. [heartbeat] But then, with a radioactive grin, Binglebert pulled out a singing toothbrush and shouted, "[excited] Trick or treat, goblins! Ready for a backwards candy battle?" [epic battle music]\x94u\x8c\x06output\x94}\x94(h\x01h\x14h\x07\x8c 69ab5691f57742b58a7e3f391b1c4c27\x94h\x16Nh\x11}\x94\x8c\x0fis_react_prompt\x94\x89sh\x18h\x1dh\x19X\xe8\x04\x00\x00Create an illustration in a mid-century modern children\xe2\x80\x99s book style inspired by 1950s UPA animation. Depict a whimsical Halloween night scene featuring Binglebert, a fluorescent capybara with a round face, rosy cheeks, and expressive eyes, wearing a squishy, oversized astronaut helmet. Binglebert is caught mid-moonwalk, posed playfully with stylized motion lines emphasizing movement. Surround him with a chaotic, joyful crowd of 847 real goblins bursting out of a retro refrigerator\xe2\x80\x94each goblin cartoonishly stylized with bold, simplified forms, holding rubber chickens, yodeling and breakdancing in exaggerated, dynamic poses. The background is an abstracted, textured environment with warm, muted tones and painterly grain, evoking a hand-painted feel. Include playful, graphic shapes and minimal shading, with a limited color palette of oranges, browns, muted greens, and soft purples. Add whimsical details like a glowing, radioactive grin on Binglebert and a singing toothbrush held triumphantly, capturing the moment before an epic, backwards candy battle. The composition should be lively and fun, with expressive character poses and charming retro design elements, including stylized motion lines and a slightly grainy, textured background.\x94uuah\x11}\x94\x8c\x08max_runs\x94Nu\x8c\x1cconversation_memory_strategy\x94\x8c\rper_structure\x94\x8c\x05tasks\x94]\x94}\x94(h\x01\x8c\nPromptTask\x94h\x03]\x94h\x05]\x94h\x07\x8c 40d0640d444c418ca94e73e973a20a9c\x94\x8c\x05state\x94\x8c\x0eState.FINISHED\x94\x8c\nparent_ids\x94]\x94\x8c\tchild_ids\x94]\x94\x8c\x17max_meta_memory_entries\x94K\x14\x8c\x07context\x94}\x94\x8c\rprompt_driver\x94}\x94(h\x01\x8c\x19GriptapeCloudPromptDriver\x94\x8c\x0btemperature\x94G?\xb9\x99\x99\x99\x99\x99\x9a\x8c\nmax_tokens\x94N\x8c\x06stream\x94\x88\x8c\x0cextra_params\x94}\x94\x8c\x05model\x94\x8c\x0cgpt-4.1-mini\x94\x8c\x1astructured_output_strategy\x94\x8c\x06native\x94u\x8c\x05tools\x94]\x94\x8c\x0cmax_subtasks\x94K\x14uau.'), 'a56f0a54-9073-4298-9b7d-0d7e92066117': pickle.loads(b'\x80\x04\x95\x10\x00\x00\x00\x00\x00\x00\x00\x8c\x0cgpt-4.1-mini\x94.'), '52310fbc-7042-46d8-92e2-b8af5e00e989': pickle.loads(b'\x80\x04\x95A\x02\x00\x00\x00\x00\x00\x00X:\x02\x00\x00Create an image generation prompt for the following story. The style should be:Mid-century modern children\xe2\x80\x99s book illustration style, inspired by 1950s UPA animation. Flat, graphic shapes with minimal shading, bold and simplified forms, and expressive character poses. Limited color palette with warm, muted tones and textured backgrounds. Playful and whimsical composition, often with stylized motion lines or abstracted environments. Features hand-painted feel, painterly grain, and charming retro character design with round faces, rosy cheeks, and expressive eyes.\x94.'), '49982319-8bbe-43ad-b474-de00a7dcae49': pickle.loads(b'\x80\x04]\x94.'), '582ac9ba-68dc-4c63-89a3-685c1a0de854': pickle.loads(b'\x80\x04]\x94.'), '11ecf7a1-5087-4a22-bd84-cfcf24e98719': pickle.loads(b'\x80\x04\x95\xef\x04\x00\x00\x00\x00\x00\x00X\xe8\x04\x00\x00Create an illustration in a mid-century modern children\xe2\x80\x99s book style inspired by 1950s UPA animation. Depict a whimsical Halloween night scene featuring Binglebert, a fluorescent capybara with a round face, rosy cheeks, and expressive eyes, wearing a squishy, oversized astronaut helmet. Binglebert is caught mid-moonwalk, posed playfully with stylized motion lines emphasizing movement. Surround him with a chaotic, joyful crowd of 847 real goblins bursting out of a retro refrigerator\xe2\x80\x94each goblin cartoonishly stylized with bold, simplified forms, holding rubber chickens, yodeling and breakdancing in exaggerated, dynamic poses. The background is an abstracted, textured environment with warm, muted tones and painterly grain, evoking a hand-painted feel. Include playful, graphic shapes and minimal shading, with a limited color palette of oranges, browns, muted greens, and soft purples. Add whimsical details like a glowing, radioactive grin on Binglebert and a singing toothbrush held triumphantly, capturing the moment before an epic, backwards candy battle. The composition should be lively and fun, with expressive character poses and charming retro design elements, including stylized motion lines and a slightly grainy, textured background.\x94.'), '9c52d4fc-86a5-40b9-8db8-d396507c36b7': pickle.loads(b'\x80\x04\x95?\x00\x00\x00\x00\x00\x00\x00\x8c;Use an agent to generate an appropriate image for the story\x94.'), '2235c8d4-2c92-4258-8bea-c257762f08c8': pickle.loads(b'\x80\x04\x95Y\x00\x00\x00\x00\x00\x00\x00\x8cUA capybara trick or treating for halloween - when they get surprised by REAL goblins!\x94.'), 'bfe7e553-a516-450a-a40b-ad2ee4a0b730': pickle.loads(b'\x80\x04\x95R\x00\x00\x00\x00\x00\x00\x00\x8cN[SUCCEEDED] No connection provided for success or failure, assuming successful\x94.'), 'b8b61c09-25fa-4e09-b27e-522abfd388b8': pickle.loads(b'\x80\x04\x95\xa5\x01\x00\x00\x00\x00\x00\x00\x8c/griptape_nodes_library.audio.audio_url_artifact\x94\x8c\x10AudioUrlArtifact\x94\x93\x94)\x81\x94}\x94(\x8c\x04type\x94\x8c\x10AudioUrlArtifact\x94\x8c\x0bmodule_name\x94\x8c/griptape_nodes_library.audio.audio_url_artifact\x94\x8c\x02id\x94\x8c 5b321724ca7a46d7ae46e6e44477ba84\x94\x8c\treference\x94N\x8c\x04meta\x94}\x94\x8c\x04name\x94h\n\x8c\x16encoding_error_handler\x94\x8c\x06strict\x94\x8c\x08encoding\x94\x8c\x05utf-8\x94\x8c\x05value\x94\x8cthttp://localhost:8124/workspace/static_files/fill_in_the_story_CombineAudio_4track_mix.mp3?t=1761415712?t=1761415713\x94ub.'), '3b949d0b-d4aa-4036-b0c6-454a4a2e6d53': pickle.loads(b'\x80\x04\x95=\x00\x00\x00\x00\x00\x00\x00\x8c9Mix the audio and music together into a final audio track\x94.'), '3916e42b-c7b9-43dd-8338-fc7f5c7acd15': pickle.loads(b'\x80\x04\x95\xd4\x00\x00\x00\x00\x00\x00\x00\x8c\xd0This is where you get to substitute your own words! \n\nThe precise options will change depending on the story generated - fill out whatever you like. The rest will be handled by an Agent later in the workflow.\x94.'), '3898d69e-933b-4896-9ea4-0aa0eff76762': pickle.loads(b'\x80\x04\x95\x05\n\x00\x00\x00\x00\x00\x00}\x94(\x8c\x04type\x94\x8c\x12GriptapeNodesAgent\x94\x8c\x08rulesets\x94]\x94(}\x94(h\x01\x8c\x07Ruleset\x94\x8c\x02id\x94\x8c d5b61a6f74d14775a2427d40e1588f08\x94\x8c\x04name\x94\x8c\x0eMadlibs_expert\x94\x8c\x04meta\x94}\x94\x8c\x05rules\x94]\x94(}\x94(h\x01\x8c\x04Rule\x94\x8c\x05value\x94X1\x01\x00\x00You create hilarious fill-in-the-blank stories called StoryFills.\nWhenever you want the player to supply a word, use <ALL CAPS> placeholders like <NOUN>, <VERB>, or <ADJECTIVE>.\nFor repeats, add _2, _3, etc. (e.g. <NAME> met <NAME_2>).\nKeep your stories funny, creative, and short enough to fill in easily\x94u}\x94(h\x01h\x10h\x11\x8c\x1eThis story will be read aloud.\x94ueu}\x94(h\x01\x8c\x07Ruleset\x94h\x07\x8c 5289224473354cd288b482ce5dc07653\x94h\t\x8c\x11elevenlabs_expert\x94h\x0b}\x94h\r]\x94(}\x94(h\x01h\x10h\x11X\x03\x01\x00\x00You liberally use tags to create more interesting stories, including voice-related, sound effects, and even experimental tags. Examples:\n[whispers] this is incredible\n[excited] oh my goodness!\n[gunshot], [clapping]\n[fart]\n[strong French accent] Zat\'s amazing.\x94u}\x94(h\x01h\x10h\x11\x8cHEllipses (...) add pauses and weight.\nCapitalization increases emphasis.\x94u}\x94(h\x01h\x10h\x11\x8cPWe\'ll be reading your story, so use lots of tags to create dynamic storytelling.\x94ueueh\r]\x94h\x07\x8c c68bc552df004cd5a2b96bbb23fb134c\x94\x8c\x13conversation_memory\x94}\x94(h\x01\x8c\x12ConversationMemory\x94\x8c\x04runs\x94]\x94}\x94(h\x01\x8c\x03Run\x94h\x07\x8c 8179bb70b04147d89ae2305e8139a2cb\x94h\x0bN\x8c\x05input\x94}\x94(h\x01\x8c\x0cTextArtifact\x94h\x07\x8c 9fdc01c765c2434ca98cc712b3265856\x94\x8c\treference\x94Nh\x0b}\x94h\th.h\x11\x8c\xd1Create an intense, funny, and dramatic VERY SHORT fill-in-the-blank story about the following topic. output only the story.\nA capybara trick or treating for halloween - when they get surprised by REAL goblins!\x94u\x8c\x06output\x94}\x94(h\x01h-h\x07\x8c 0ccd3ab67da74ba5a3f2af69f8af004d\x94h/Nh\x0b}\x94\x8c\x0fis_react_prompt\x94\x89sh\th4h\x11X\x0b\x02\x00\x00[dramatic music] On Halloween night, a <ADJECTIVE> capybara named <NAME> put on a <ADJECTIVE_2> <COSTUME> and went <VERB> door to door for <CANDY_TYPE>. Suddenly, out of the <PLACE>, <NUMBER> REAL goblins appeared, <VERB_2> and <VERB_3> with <NOUN> in their hands! [goblin growl] <NAME> froze like a <ANIMAL> caught in a <NOUN_2> trap. [heartbeat] But then, with a <ADJECTIVE_3> grin, <NAME> pulled out a <NOUN_3> and shouted, "[excited] Trick or treat, goblins! Ready for a <ADJECTIVE_4> candy battle?" [epic battle music]\x94uuah\x0b}\x94\x8c\x08max_runs\x94Nu\x8c\x1cconversation_memory_strategy\x94\x8c\rper_structure\x94\x8c\x05tasks\x94]\x94}\x94(h\x01\x8c\nPromptTask\x94h\x03]\x94h\r]\x94h\x07\x8c b3c333305071407d990457e65370ad1b\x94\x8c\x05state\x94\x8c\x0eState.FINISHED\x94\x8c\nparent_ids\x94]\x94\x8c\tchild_ids\x94]\x94\x8c\x17max_meta_memory_entries\x94K\x14\x8c\x07context\x94}\x94\x8c\rprompt_driver\x94}\x94(h\x01\x8c\x19GriptapeCloudPromptDriver\x94\x8c\x0btemperature\x94G?\xb9\x99\x99\x99\x99\x99\x9a\x8c\nmax_tokens\x94N\x8c\x06stream\x94\x88\x8c\x0cextra_params\x94}\x94\x8c\x05model\x94\x8c\x0cgpt-4.1-mini\x94\x8c\x1astructured_output_strategy\x94\x8c\x06native\x94u\x8c\x05tools\x94]\x94\x8c\x0cmax_subtasks\x94K\x14uau.'), '91178c46-7b25-4cb5-9d10-dfa0efe64ef9': pickle.loads(b'\x80\x04\x95\x7f\x00\x00\x00\x00\x00\x00\x00\x8c{Create an intense, funny, and dramatic VERY SHORT fill-in-the-blank story about the following topic. output only the story.\x94.'), 'b83f2b19-f941-454a-9217-c40f073545f8': pickle.loads(b'\x80\x04]\x94.'), '469cce78-650e-41e4-b4d1-712879d55d10': pickle.loads(b'\x80\x04\x95\'\x06\x00\x00\x00\x00\x00\x00]\x94(\x8c\x16griptape.rules.ruleset\x94\x8c\x07Ruleset\x94\x93\x94)\x81\x94}\x94(\x8c\x04type\x94\x8c\x07Ruleset\x94\x8c\x0bmodule_name\x94\x8c\x16griptape.rules.ruleset\x94\x8c\x02id\x94\x8c d5b61a6f74d14775a2427d40e1588f08\x94\x8c\x04name\x94\x8c\x0eMadlibs_expert\x94\x8c\x0eruleset_driver\x94\x8c-griptape.drivers.ruleset.local_ruleset_driver\x94\x8c\x12LocalRulesetDriver\x94\x93\x94)\x81\x94}\x94(h\x06\x8c\x12LocalRulesetDriver\x94h\x08\x8c-griptape.drivers.ruleset.local_ruleset_driver\x94\x8c\x0fraise_not_found\x94\x88\x8c\x0bpersist_dir\x94Nub\x8c\x04meta\x94}\x94\x8c\x05rules\x94]\x94(\x8c\x13griptape.rules.rule\x94\x8c\x04Rule\x94\x93\x94)\x81\x94}\x94(h\x06\x8c\x04Rule\x94h\x08\x8c\x13griptape.rules.rule\x94h\x18}\x94\x8c\x05value\x94X1\x01\x00\x00You create hilarious fill-in-the-blank stories called StoryFills.\nWhenever you want the player to supply a word, use <ALL CAPS> placeholders like <NOUN>, <VERB>, or <ADJECTIVE>.\nFor repeats, add _2, _3, etc. (e.g. <NAME> met <NAME_2>).\nKeep your stories funny, creative, and short enough to fill in easily\x94ubh\x1e)\x81\x94}\x94(h\x06h!h\x08h"h\x18}\x94h$\x8c\x1eThis story will be read aloud.\x94ubeubh\x03)\x81\x94}\x94(h\x06\x8c\x07Ruleset\x94h\x08\x8c\x16griptape.rules.ruleset\x94h\n\x8c 5289224473354cd288b482ce5dc07653\x94h\x0c\x8c\x11elevenlabs_expert\x94h\x0eh\x11)\x81\x94}\x94(h\x06\x8c\x12LocalRulesetDriver\x94h\x08\x8c-griptape.drivers.ruleset.local_ruleset_driver\x94h\x16\x88h\x17Nubh\x18}\x94h\x1a]\x94(h\x1e)\x81\x94}\x94(h\x06\x8c\x04Rule\x94h\x08\x8c\x13griptape.rules.rule\x94h\x18}\x94h$X\x03\x01\x00\x00You liberally use tags to create more interesting stories, including voice-related, sound effects, and even experimental tags. Examples:\n[whispers] this is incredible\n[excited] oh my goodness!\n[gunshot], [clapping]\n[fart]\n[strong French accent] Zat\'s amazing.\x94ubh\x1e)\x81\x94}\x94(h\x06h8h\x08h9h\x18}\x94h$\x8cHEllipses (...) add pauses and weight.\nCapitalization increases emphasis.\x94ubh\x1e)\x81\x94}\x94(h\x06h8h\x08h9h\x18}\x94h$\x8cPWe\'ll be reading your story, so use lots of tags to create dynamic storytelling.\x94ubeube.'), '0bd2a1d2-4bdd-43e1-96e4-eb377a35c86d': pickle.loads(b'\x80\x04KH.'), '5cb1a528-9fec-4f15-bf47-78885a8e7b10': pickle.loads(b'\x80\x04\x95\n\x00\x00\x00\x00\x00\x00\x00G?\xda=p\xa3\xd7\n=.'), '0675d7a4-f12b-47ed-92aa-7884c7ef0476': pickle.loads(b'\x80\x04K/.'), '41a49906-41bc-4569-a1f5-7361ef2ef3b2': pickle.loads(b'\x80\x04\x95\x0f\x00\x00\x00\x00\x00\x00\x00\x8c\x0badd [A + B]\x94.'), '8393b864-4264-4b75-bf1c-994d038b959e': pickle.loads(b'\x80\x04\x95\n\x00\x00\x00\x00\x00\x00\x00G@E/n\x9b\xbf\r\xc7.'), '1ac6e33f-511e-4caf-a1ee-a16714099a9f': pickle.loads(b'\x80\x04K\x05.'), '198ab34c-fe16-4bc9-a6c5-4ef75feb4043': pickle.loads(b'\x80\x04\x95\n\x00\x00\x00\x00\x00\x00\x00G@G\xafn\x9b\xbf\r\xc7.'), '1ca5e310-b302-4e00-bbb1-10c8924fa8ec': pickle.loads(b'\x80\x04\x95\x14\x00\x00\x00\x00\x00\x00\x00\x8c\x10round [round(A)]\x94.'), '150ea223-9214-464e-b71f-35e8ef731408': pickle.loads(b'\x80\x04K\x01.'), 'febe3f70-82ed-4f56-94ce-9d011b616926': pickle.loads(b'\x80\x04\x95\x13\x00\x00\x00\x00\x00\x00\x00\x8c\x0fmax [max(A, B)]\x94.'), '0c276508-d497-4523-a750-d044ec6d2c5f': pickle.loads(b'\x80\x04K\n.')}

'# Create the Flow, then do work within it as context.'

flow0_name = GriptapeNodes.handle_request(CreateFlowRequest(parent_flow_name=None, set_as_new_context=False, metadata={})).flow_name

with GriptapeNodes.ContextManager().flow(flow0_name):
    node0_name = GriptapeNodes.handle_request(CreateNodeRequest(node_type='Ruleset', specific_library_name='Griptape Nodes Library', node_name='Ruleset', metadata={'position': {'x': -5770.717871132079, 'y': 1026.941874046241}, 'tempId': 'placing-1761162771721-smz556', 'library_node_metadata': NodeMetadata(category='agents/rules', description='Give an agent a set of rules and behaviors to follow', display_name='Ruleset', tags=None, icon=None, color=None, group='create', deprecation=None), 'library': 'Griptape Nodes Library', 'node_type': 'Ruleset', 'showaddparameter': False, 'category': 'agents/rules', 'size': {'width': 400, 'height': 435}}, resolution='resolved', initial_setup=True)).node_name
    node1_name = GriptapeNodes.handle_request(CreateNodeRequest(node_type='ExecutePython', specific_library_name='Griptape Nodes Library', node_name='Execute Python', metadata={'position': {'x': -3869.727435876353, 'y': 1224.8082350866819}, 'tempId': 'placing-1761162987063-tcon6t', 'library_node_metadata': NodeMetadata(category='engine', description='Execute Python code with input variables and capture output', display_name='Execute Python', tags=None, icon='Code', color=None, group=None, deprecation=None), 'library': 'Griptape Nodes Library', 'node_type': 'ExecutePython', 'showaddparameter': False, 'category': 'engine', 'size': {'width': 449, 'height': 533}}, resolution='resolved', initial_setup=True)).node_name
    node2_name = GriptapeNodes.handle_request(CreateNodeRequest(node_type='KeyValuePair', specific_library_name='Griptape Nodes Library', node_name='Key Value Pair', metadata={'position': {'x': -4289.008081693447, 'y': 1242.1086881821}, 'tempId': 'placing-1761163007057-tmptlk', 'library_node_metadata': NodeMetadata(category='dict', description='Create a Key Value Pair', display_name='Key Value Pair', tags=None, icon=None, color=None, group='create', deprecation=None), 'library': 'Griptape Nodes Library', 'node_type': 'KeyValuePair', 'showaddparameter': False, 'category': 'dict', 'size': {'width': 400, 'height': 284}}, resolution='resolved', initial_setup=True)).node_name
    with GriptapeNodes.ContextManager().node(node2_name):
        GriptapeNodes.handle_request(AlterParameterDetailsRequest(parameter_name='dictionary', ui_options={'display_name': 'Key/Value Pair', 'hide': False}, initial_setup=True))
    node3_name = GriptapeNodes.handle_request(CreateNodeRequest(node_type='ExecutePython', specific_library_name='Griptape Nodes Library', node_name='Execute Python_1', metadata={'position': {'x': -686.240153066763, 'y': 1102.441874046241}, 'tempId': 'placing-1761162987063-tcon6t', 'library_node_metadata': NodeMetadata(category='engine', description='Execute Python code with input variables and capture output', display_name='Execute Python', tags=None, icon='Code', color=None, group=None, deprecation=None), 'library': 'Griptape Nodes Library', 'node_type': 'ExecutePython', 'showaddparameter': False, 'category': 'engine', 'size': {'width': 620, 'height': 731}}, resolution='resolved', initial_setup=True)).node_name
    node4_name = GriptapeNodes.handle_request(CreateNodeRequest(node_type='MergeKeyValuePairs', specific_library_name='Griptape Nodes Library', node_name='Merge Key Value Pairs', metadata={'position': {'x': -1535.6061852777989, 'y': 1473.6086881821}, 'tempId': 'placing-1761167886847-nl0hmr', 'library_node_metadata': NodeMetadata(category='dict', description='Merges multiple Key/Value Pairs into a single dictionary', display_name='Merge Key Value Pairs', tags=None, icon=None, color=None, group='merge', deprecation=None), 'library': 'Griptape Nodes Library', 'node_type': 'MergeKeyValuePairs', 'showaddparameter': False, 'size': {'width': 805, 'height': 375}, 'category': 'dict'}, initial_setup=True)).node_name
    with GriptapeNodes.ContextManager().node(node4_name):
        GriptapeNodes.handle_request(AddParameterToNodeRequest(parameter_name='KeyValuePairs_ParameterListUniqueParamID_b82530a6986448a38f980f9cd1a97774', tooltip='Key Value Pair', type='dict', input_types=['dict'], output_type='dict', ui_options={}, mode_allowed_input=True, mode_allowed_property=True, mode_allowed_output=False, is_user_defined=True, settable=True, parent_container_name='KeyValuePairs', initial_setup=True))
        GriptapeNodes.handle_request(AddParameterToNodeRequest(parameter_name='KeyValuePairs_ParameterListUniqueParamID_4d28ca50c44141539f12848d408bef11', tooltip='Key Value Pair', type='dict', input_types=['dict'], output_type='dict', ui_options={}, mode_allowed_input=True, mode_allowed_property=True, mode_allowed_output=False, is_user_defined=True, settable=True, parent_container_name='KeyValuePairs', initial_setup=True))
    node5_name = GriptapeNodes.handle_request(CreateNodeRequest(node_type='KeyValuePair', specific_library_name='Griptape Nodes Library', node_name='Key Value Pair_1', metadata={'position': {'x': -1124.3893058405245, 'y': 1102.441874046241}, 'tempId': 'placing-1761175246623-hmadk', 'library_node_metadata': NodeMetadata(category='dict', description='Create a Key Value Pair', display_name='Key Value Pair', tags=None, icon=None, color=None, group='create', deprecation=None), 'library': 'Griptape Nodes Library', 'node_type': 'KeyValuePair', 'showaddparameter': False, 'category': 'dict', 'size': {'width': 400, 'height': 284}}, resolution='resolved', initial_setup=True)).node_name
    with GriptapeNodes.ContextManager().node(node5_name):
        GriptapeNodes.handle_request(AlterParameterDetailsRequest(parameter_name='dictionary', ui_options={'display_name': 'Key/Value Pair', 'hide': False}, initial_setup=True))
    node6_name = GriptapeNodes.handle_request(CreateNodeRequest(node_type='ToText', specific_library_name='Griptape Nodes Library', node_name='To Text_2', metadata={'position': {'x': -1541.0305854385158, 'y': 1104.441874046241}, 'tempId': 'placing-1761175268703-r2rlud', 'library_node_metadata': NodeMetadata(category='convert', description='Converts incoming value to text', display_name='To Text', tags=None, icon=None, color=None, group='edit', deprecation=None), 'library': 'Griptape Nodes Library', 'node_type': 'ToText', 'showaddparameter': False, 'category': 'convert', 'size': {'width': 400, 'height': 280}}, resolution='resolved', initial_setup=True)).node_name
    node7_name = GriptapeNodes.handle_request(CreateNodeRequest(node_type='DisplayText', specific_library_name='Griptape Nodes Library', node_name='FINAL STORY', metadata={'position': {'x': 353.86900884605865, 'y': 1043.0842856800036}, 'tempId': 'placing-1761175963217-lm1jeo', 'library_node_metadata': NodeMetadata(category='text', description='DisplayText node', display_name='Display Text', tags=None, icon=None, color=None, group='display', deprecation=None), 'library': 'Griptape Nodes Library', 'node_type': 'DisplayText', 'showaddparameter': False, 'category': 'text', 'size': {'width': 614, 'height': 588}}, resolution='resolved', initial_setup=True)).node_name
    node8_name = GriptapeNodes.handle_request(CreateNodeRequest(node_type='Ruleset', specific_library_name='Griptape Nodes Library', node_name='Ruleset_1', metadata={'position': {'x': -5767.210180149968, 'y': 1526.1086881821}, 'tempId': 'placing-1761176395286-u260f', 'library_node_metadata': NodeMetadata(category='agents/rules', description='Give an agent a set of rules and behaviors to follow', display_name='Ruleset', tags=None, icon=None, color=None, group='create', deprecation=None), 'library': 'Griptape Nodes Library', 'node_type': 'Ruleset', 'showaddparameter': False, 'category': 'agents/rules', 'size': {'width': 406, 'height': 270}}, resolution='resolved', initial_setup=True)).node_name
    node9_name = GriptapeNodes.handle_request(CreateNodeRequest(node_type='TextInput', specific_library_name='Griptape Nodes Library', node_name='Actor', metadata={'position': {'x': 1704.8092381735098, 'y': -660.85593763536}, 'tempId': 'placing-1761175909146-ygthk4', 'library_node_metadata': NodeMetadata(category='text', description='TextInput node', display_name='Text Input', tags=None, icon='text-cursor', color=None, group='create', deprecation=None), 'library': 'Griptape Nodes Library', 'node_type': 'TextInput', 'showaddparameter': False, 'category': 'text', 'size': {'width': 537, 'height': 254}}, resolution='resolved', initial_setup=True)).node_name
    with GriptapeNodes.ContextManager().node(node9_name):
        GriptapeNodes.handle_request(AlterParameterDetailsRequest(parameter_name='text', ui_options={'multiline': True, 'hide': True}, initial_setup=True))
        GriptapeNodes.handle_request(AddParameterToNodeRequest(parameter_name='voice_preset', default_value='', tooltip='New parameter', type='str', input_types=['str'], output_type='str', ui_options={'simple_dropdown': ['Alexandra', 'Antoni', 'Austin', 'Clyde', 'Dave', 'Domi', 'Drew', 'Fin', 'Hope', 'James', 'Jane', 'Paul', 'Rachel', 'Sarah', 'Thomas', 'Custom...'], 'show_search': True, 'search_filter': '', 'display_name': 'Voice', 'is_custom': True, 'is_user_added': True}, mode_allowed_input=True, mode_allowed_property=True, mode_allowed_output=True, parent_container_name='', initial_setup=True))
        GriptapeNodes.handle_request(AddParameterToNodeRequest(parameter_name='custom_voice_id', default_value='', tooltip='New parameter', type='str', input_types=['str'], output_type='str', ui_options={'display_name': 'Custom Voice ID', 'hide': False, 'placeholder_text': 'e.g., 21m00Tcm4TlvDq8ikWAM', 'is_custom': True, 'is_user_added': True}, mode_allowed_input=True, mode_allowed_property=True, mode_allowed_output=True, parent_container_name='', initial_setup=True))
    node10_name = GriptapeNodes.handle_request(CreateNodeRequest(node_type='Agent', specific_library_name='Griptape Nodes Library', node_name='Agent_1', metadata={'position': {'x': 987.820476605953, 'y': 1053.9209876876198}, 'tempId': 'placing-1761177068892-j2whs', 'library_node_metadata': NodeMetadata(category='agents', description='Creates an AI agent with conversation memory and the ability to use tools', display_name='Agent', tags=None, icon=None, color=None, group='create', deprecation=None), 'library': 'Griptape Nodes Library', 'node_type': 'Agent', 'showaddparameter': False, 'category': 'agents', 'size': {'width': 400, 'height': 620}}, resolution='resolved', initial_setup=True)).node_name
    with GriptapeNodes.ContextManager().node(node10_name):
        GriptapeNodes.handle_request(AlterParameterDetailsRequest(parameter_name='additional_context', mode_allowed_property=False, initial_setup=True))
    node11_name = GriptapeNodes.handle_request(CreateNodeRequest(node_type='MergeTexts', specific_library_name='Griptape Nodes Library', node_name='Merge Texts', metadata={'position': {'x': 3838.2075938134476, 'y': 582.3130073409117}, 'tempId': 'placing-1761177239564-sfmly', 'library_node_metadata': NodeMetadata(category='text', description='MergeTexts node', display_name='Merge Texts', tags=None, icon='merge', color=None, group='merge', deprecation=None), 'library': 'Griptape Nodes Library', 'node_type': 'MergeTexts', 'showaddparameter': False, 'category': 'text', 'size': {'width': 400, 'height': 456}}, resolution='resolved', initial_setup=True)).node_name
    node12_name = GriptapeNodes.handle_request(CreateNodeRequest(node_type='SplitText', specific_library_name='Griptape Nodes Library', node_name='Split Text', metadata={'position': {'x': -3381.1887307512857, 'y': 1305.8082350866819}, 'tempId': 'placing-1761247798586-bouvtg', 'library_node_metadata': NodeMetadata(category='lists', description='Takes a text string and splits it into a list based on a specified delimiter.', display_name='Split Text', tags=None, icon='scissors', color=None, group='edit', deprecation=None), 'library': 'Griptape Nodes Library', 'node_type': 'SplitText', 'showaddparameter': False, 'category': 'lists', 'size': {'width': 564, 'height': 371}}, resolution='resolved', initial_setup=True)).node_name
    with GriptapeNodes.ContextManager().node(node12_name):
        GriptapeNodes.handle_request(AlterParameterDetailsRequest(parameter_name='delimiter_type', ui_options={'simple_dropdown': ['newlines', 'double_newline', 'space', 'comma', 'semicolon', 'colon', 'tab', 'pipe', 'dash', 'underscore', 'period', 'slash', 'backslash', 'at', 'hash', 'ampersand', 'equals'], 'show_search': True, 'search_filter': '', 'hidden': True, 'hide': True}, initial_setup=True))
        GriptapeNodes.handle_request(AlterParameterDetailsRequest(parameter_name='include_delimiter', ui_options={'hidden': True, 'hide': True}, initial_setup=True))
    node13_name = GriptapeNodes.handle_request(CreateNodeRequest(node_type='AudioDetails', specific_library_name='Griptape Nodes Library', node_name='Audio Details', metadata={'position': {'x': 2678.543459622661, 'y': -252.73297597565812}, 'tempId': 'placing-1761269991493-u7y9fd', 'library_node_metadata': NodeMetadata(category='audio', description='Extract detailed information from an audio file including duration, format, bitrate, and sample rate', display_name='Audio Details', tags=None, icon='info', color=None, group='describe', deprecation=None), 'library': 'Griptape Nodes Library', 'node_type': 'AudioDetails', 'showaddparameter': False, 'category': 'audio', 'size': {'width': 675, 'height': 387}}, initial_setup=True)).node_name
    node14_name = GriptapeNodes.handle_request(CreateNodeRequest(node_type='Note', specific_library_name='Griptape Nodes Library', node_name='Voice Selection', metadata={'position': {'x': 1639.440425163141, 'y': -948.9123001602443}, 'tempId': 'placing-1761408513273-5t759j', 'library_node_metadata': NodeMetadata(category='misc', description='Create a note node to provide helpful context in your workflow', display_name='Note', tags=None, icon='notepad-text', color=None, group='create', deprecation=None), 'library': 'Griptape Nodes Library', 'node_type': 'Note', 'showaddparameter': False, 'category': 'misc', 'size': {'width': 682, 'height': 1841}}, resolution='resolved', initial_setup=True)).node_name
    node15_name = GriptapeNodes.handle_request(CreateNodeRequest(node_type='Note', specific_library_name='Griptape Nodes Library', node_name='Topic Selection', metadata={'position': {'x': -5878.710180149968, 'y': -519.4367915314483}, 'tempId': 'placing-1761408805116-d2lubi', 'library_node_metadata': NodeMetadata(category='misc', description='Create a note node to provide helpful context in your workflow', display_name='Note', tags=None, icon='notepad-text', color=None, group='create', deprecation=None), 'library': 'Griptape Nodes Library', 'node_type': 'Note', 'showaddparameter': False, 'category': 'misc', 'size': {'width': 623, 'height': 513}}, resolution='resolved', initial_setup=True)).node_name
    node16_name = GriptapeNodes.handle_request(CreateNodeRequest(node_type='Note', specific_library_name='Griptape Nodes Library', node_name='Note_1', metadata={'position': {'x': -5868.302448659754, 'y': 742.4209876876199}, 'tempId': 'placing-1761408880616-woemnf', 'library_node_metadata': NodeMetadata(category='misc', description='Create a note node to provide helpful context in your workflow', display_name='Note', tags=None, icon='notepad-text', color=None, group='create', deprecation=None), 'library': 'Griptape Nodes Library', 'node_type': 'Note', 'showaddparameter': False, 'category': 'misc', 'size': {'width': 1377, 'height': 1243}}, resolution='resolved', initial_setup=True)).node_name
    node17_name = GriptapeNodes.handle_request(CreateNodeRequest(node_type='Note', specific_library_name='Griptape Nodes Library', node_name='Note_2', metadata={'position': {'x': -4339.471233409686, 'y': 971.7341970609577}, 'tempId': 'placing-1761408943293-9dxtne', 'library_node_metadata': NodeMetadata(category='misc', description='Create a note node to provide helpful context in your workflow', display_name='Note', tags=None, icon='notepad-text', color=None, group='create', deprecation=None), 'library': 'Griptape Nodes Library', 'node_type': 'Note', 'showaddparameter': False, 'category': 'misc', 'size': {'width': 1554, 'height': 891}}, resolution='resolved', initial_setup=True)).node_name
    node18_name = GriptapeNodes.handle_request(CreateNodeRequest(node_type='Note', specific_library_name='Griptape Nodes Library', node_name='Story Cleanup', metadata={'position': {'x': 312.8749481857674, 'y': 912.4418740462411}, 'tempId': 'placing-1761409280581-9zfy79', 'library_node_metadata': NodeMetadata(category='misc', description='Create a note node to provide helpful context in your workflow', display_name='Note', tags=None, icon='notepad-text', color=None, group='create', deprecation=None), 'library': 'Griptape Nodes Library', 'node_type': 'Note', 'showaddparameter': False, 'category': 'misc', 'size': {'width': 1154, 'height': 817}}, resolution='resolved', initial_setup=True)).node_name
    node19_name = GriptapeNodes.handle_request(CreateNodeRequest(node_type='Note', specific_library_name='Griptape Nodes Library', node_name='Replace Words', metadata={'position': {'x': -1587.8298487933343, 'y': 912.4418740462411}, 'tempId': 'placing-1761409196904-09dj4i', 'library_node_metadata': NodeMetadata(category='misc', description='Create a note node to provide helpful context in your workflow', display_name='Note', tags=None, icon='notepad-text', color=None, group='create', deprecation=None), 'library': 'Griptape Nodes Library', 'node_type': 'Note', 'showaddparameter': False, 'category': 'misc', 'size': {'width': 1564, 'height': 1008}}, resolution='resolved', initial_setup=True)).node_name
    node20_name = GriptapeNodes.handle_request(CreateNodeRequest(node_type='Note', specific_library_name='Griptape Nodes Library', node_name='Get background music length', metadata={'position': {'x': 2627.2075938134476, 'y': -432.2329759756581}, 'tempId': 'placing-1761409618884-5akbks', 'library_node_metadata': {'category': 'misc', 'description': 'Create a note node to provide helpful context in your workflow'}, 'library': 'Griptape Nodes Library', 'node_type': 'Note', 'showaddparameter': False, 'category': 'misc', 'size': {'width': 2076, 'height': 647}}, initial_setup=True)).node_name
    node21_name = GriptapeNodes.handle_request(CreateNodeRequest(node_type='Note', specific_library_name='Griptape Nodes Library', node_name='Background Music', metadata={'position': {'x': 3719.4612197805404, 'y': 444.54984326081507}, 'tempId': 'placing-1761409729604-zi35i', 'library_node_metadata': NodeMetadata(category='misc', description='Create a note node to provide helpful context in your workflow', display_name='Note', tags=None, icon='notepad-text', color=None, group='create', deprecation=None), 'library': 'Griptape Nodes Library', 'node_type': 'Note', 'showaddparameter': False, 'category': 'misc', 'size': {'width': 1171, 'height': 919}}, resolution='resolved', initial_setup=True)).node_name
    node22_name = GriptapeNodes.handle_request(CreateNodeRequest(node_type='Agent', specific_library_name='Griptape Nodes Library', node_name='Agent_5', metadata={'position': {'x': 3750.2075938134476, 'y': 1542.11228748111}, 'tempId': 'placing-1761321218374-f060pr', 'library_node_metadata': NodeMetadata(category='agents', description='Creates an AI agent with conversation memory and the ability to use tools', display_name='Agent', tags=None, icon=None, color=None, group='create', deprecation=None), 'library': 'Griptape Nodes Library', 'node_type': 'Agent', 'showaddparameter': False, 'category': 'agents', 'size': {'width': 499, 'height': 770}}, resolution='resolved', initial_setup=True)).node_name
    with GriptapeNodes.ContextManager().node(node22_name):
        GriptapeNodes.handle_request(AlterParameterDetailsRequest(parameter_name='additional_context', mode_allowed_property=False, initial_setup=True))
        GriptapeNodes.handle_request(AlterParameterDetailsRequest(parameter_name='tools', ui_options={'hide': True}, initial_setup=True))
        GriptapeNodes.handle_request(AlterParameterDetailsRequest(parameter_name='rulesets', ui_options={'hide': True}, initial_setup=True))
    node23_name = GriptapeNodes.handle_request(CreateNodeRequest(node_type='Note', specific_library_name='Griptape Nodes Library', node_name='Image Generation', metadata={'position': {'x': 3729.9227108692885, 'y': 1400.4454733452508}, 'tempId': 'placing-1761410219033-5b1tqs', 'library_node_metadata': NodeMetadata(category='misc', description='Create a note node to provide helpful context in your workflow', display_name='Note', tags=None, icon='notepad-text', color=None, group='create', deprecation=None), 'library': 'Griptape Nodes Library', 'node_type': 'Note', 'showaddparameter': False, 'category': 'misc', 'size': {'width': 1179, 'height': 974}}, resolution='resolved', initial_setup=True)).node_name
    node24_name = GriptapeNodes.handle_request(CreateNodeRequest(node_type='StartFlow', specific_library_name='Griptape Nodes Library', node_name='Start Flow', metadata={'position': {'x': -5825.210180149968, 'y': -327.73715330730204}, 'tempId': 'placing-1761410401103-iojf4s', 'library_node_metadata': NodeMetadata(category='workflows', description='Define the start of a workflow and pass parameters into the flow', display_name='Start Flow', tags=None, icon=None, color=None, group='create', deprecation=None), 'library': 'Griptape Nodes Library', 'node_type': 'StartFlow', 'showaddparameter': True, 'category': 'workflows', 'size': {'width': 528, 'height': 260}}, resolution='resolved', initial_setup=True)).node_name
    with GriptapeNodes.ContextManager().node(node24_name):
        GriptapeNodes.handle_request(AddParameterToNodeRequest(parameter_name='topic', default_value='', tooltip='A story topic', type='str', input_types=['str'], output_type='str', ui_options={'placeholder_text': 'Any additional context for the Agent.', 'is_custom': True, 'is_user_added': True, 'hide': False, 'tooltip': 'A story topic'}, mode_allowed_input=True, mode_allowed_property=True, mode_allowed_output=True, parent_container_name='', initial_setup=True))
    node25_name = GriptapeNodes.handle_request(CreateNodeRequest(node_type='EndFlow', specific_library_name='Griptape Nodes Library', node_name='End Flow', metadata={'position': {'x': 6908.06323070867, 'y': 254.19123192167677}, 'tempId': 'placing-1761410463393-8gxor9', 'library_node_metadata': NodeMetadata(category='workflows', description='Define the end of a workflow and return parameters from the flow', display_name='End Flow', tags=None, icon=None, color=None, group='create', deprecation=None), 'library': 'Griptape Nodes Library', 'node_type': 'EndFlow', 'showaddparameter': True, 'category': 'workflows', 'size': {'width': 2130, 'height': 2374}}, initial_setup=True)).node_name
    with GriptapeNodes.ContextManager().node(node25_name):
        GriptapeNodes.handle_request(AddParameterToNodeRequest(parameter_name='image_url', default_value='', tooltip='New parameter', type='ImageUrlArtifact', input_types=['ImageUrlArtifact'], output_type='ImageUrlArtifact', ui_options={'is_full_width': True, 'pulse_on_run': True, 'is_custom': True, 'is_user_added': True}, mode_allowed_input=True, mode_allowed_property=True, mode_allowed_output=True, parent_container_name='', initial_setup=True))
        GriptapeNodes.handle_request(AddParameterToNodeRequest(parameter_name='mixed_audio', default_value='', tooltip='New parameter', type='AudioUrlArtifact', input_types=['any'], output_type='AudioUrlArtifact', ui_options={'pulse_on_run': True, 'is_custom': True, 'is_user_added': True}, mode_allowed_input=True, mode_allowed_property=True, mode_allowed_output=True, parent_container_name='', initial_setup=True))
    node26_name = GriptapeNodes.handle_request(CreateNodeRequest(node_type='Note', specific_library_name='Griptape Nodes Library', node_name='Combine the audio', metadata={'position': {'x': 5041.173643888671, 'y': -68.19176491331814}, 'tempId': 'placing-1761410138696-l5j4ln', 'library_node_metadata': NodeMetadata(category='misc', description='Create a note node to provide helpful context in your workflow', display_name='Note', tags=None, icon='notepad-text', color=None, group='create', deprecation=None), 'library': 'Griptape Nodes Library', 'node_type': 'Note', 'showaddparameter': False, 'category': 'misc', 'size': {'width': 1500, 'height': 1252}}, resolution='resolved', initial_setup=True)).node_name
    node27_name = GriptapeNodes.handle_request(CreateNodeRequest(node_type='ListToDictKeys', specific_library_name='Griptape Nodes Library', node_name='FillInTheBlanks', metadata={'position': {'x': -2726.067369661213, 'y': -327.73715330730204}, 'tempId': 'placing-1761173889668-zqg7g', 'library_node_metadata': NodeMetadata(category='convert', description='Converts a list to dictionary keys with empty string values', display_name='List To Dict Keys', tags=None, icon=None, color=None, group='edit', deprecation=None), 'library': 'Griptape Nodes Library', 'node_type': 'ListToDictKeys', 'showaddparameter': True, 'category': 'convert', 'size': {'width': 937, 'height': 1540}}, resolution='resolved', initial_setup=True)).node_name
    node28_name = GriptapeNodes.handle_request(CreateNodeRequest(node_type='Note', specific_library_name='Griptape Nodes Library', node_name='Word Selection', metadata={'position': {'x': -2726.067369661213, 'y': -620.1234669050347}, 'tempId': 'placing-1761408805116-d2lubi', 'library_node_metadata': NodeMetadata(category='misc', description='Create a note node to provide helpful context in your workflow', display_name='Note', tags=None, icon='notepad-text', color=None, group='create', deprecation=None), 'library': 'Griptape Nodes Library', 'node_type': 'Note', 'showaddparameter': False, 'category': 'misc', 'size': {'width': 1033, 'height': 241}}, resolution='resolved', initial_setup=True)).node_name
    node29_name = GriptapeNodes.handle_request(CreateNodeRequest(node_type='Agent', specific_library_name='Griptape Nodes Library', node_name='Agent', metadata={'position': {'x': -5217.318767020446, 'y': 971.7341970609577}, 'tempId': 'placing-1761414413885-bzalbl', 'library_node_metadata': NodeMetadata(category='agents', description='Creates an AI agent with conversation memory and the ability to use tools', display_name='Agent', tags=None, icon=None, color=None, group='create', deprecation=None), 'library': 'Griptape Nodes Library', 'node_type': 'Agent', 'showaddparameter': False, 'category': 'agents', 'size': {'width': 592, 'height': 805}}, initial_setup=True)).node_name
    with GriptapeNodes.ContextManager().node(node29_name):
        GriptapeNodes.handle_request(AlterParameterDetailsRequest(parameter_name='additional_context', mode_allowed_property=False, initial_setup=True))
        GriptapeNodes.handle_request(AddParameterToNodeRequest(parameter_name='rulesets_ParameterListUniqueParamID_0150a52757ad4a0b9e0c98230e7b0da2', default_value=[], tooltip='Rulesets to apply to the agent to control its behavior.', type='Ruleset', input_types=['Ruleset', 'list[Ruleset]'], output_type='Ruleset', ui_options={}, mode_allowed_input=True, mode_allowed_property=False, mode_allowed_output=False, is_user_defined=True, settable=True, parent_container_name='rulesets', initial_setup=True))
        GriptapeNodes.handle_request(AddParameterToNodeRequest(parameter_name='rulesets_ParameterListUniqueParamID_3bf3ee9de1394507b71a06a6c3c5b660', default_value=[], tooltip='Rulesets to apply to the agent to control its behavior.', type='Ruleset', input_types=['Ruleset', 'list[Ruleset]'], output_type='Ruleset', ui_options={}, mode_allowed_input=True, mode_allowed_property=False, mode_allowed_output=False, is_user_defined=True, settable=True, parent_container_name='rulesets', initial_setup=True))
    node30_name = GriptapeNodes.handle_request(CreateNodeRequest(node_type='SeedreamImageGeneration', specific_library_name='Griptape Nodes Library', node_name='Seedream Image Generation', metadata={'position': {'x': 4299.873535566567, 'y': 1542.11228748111}, 'tempId': 'placing-1761416367933-i7o8ik', 'library_node_metadata': NodeMetadata(category='image', description='Generate images using Seedream models (seedream-4.0, seedream-3.0-t2i) via Griptape model proxy', display_name='Seedream Image Generation', tags=None, icon='Sparkles', color=None, group='create', deprecation=None), 'library': 'Griptape Nodes Library', 'node_type': 'SeedreamImageGeneration', 'showaddparameter': False, 'size': {'width': 563, 'height': 765}, 'category': 'image'}, initial_setup=True)).node_name
    with GriptapeNodes.ContextManager().node(node30_name):
        GriptapeNodes.handle_request(AlterParameterDetailsRequest(parameter_name='generation_id', ui_options={'hide_property': True, 'hide': True}, initial_setup=True))
        GriptapeNodes.handle_request(AlterParameterDetailsRequest(parameter_name='provider_response', ui_options={'hide_property': True, 'hide': True}, initial_setup=True))
    node31_name = GriptapeNodes.handle_request(CreateNodeRequest(node_type='CombineAudio', specific_library_name='Griptape Nodes Library', node_name='Combine Audio', metadata={'position': {'x': 5130.052908815425, 'y': 87.30211478660958}, 'tempId': 'placing-1761416413866-fvg1s', 'library_node_metadata': NodeMetadata(category='audio', description='Combine multiple audio tracks into a single audio file using ffmpeg', display_name='Combine Audio', tags=None, icon='layers', color=None, group='create', deprecation=None), 'library': 'Griptape Nodes Library', 'node_type': 'CombineAudio', 'showaddparameter': False, 'category': 'audio', 'size': {'width': 1338, 'height': 988}}, initial_setup=True)).node_name
    node32_name = GriptapeNodes.handle_request(CreateNodeRequest(node_type='ElevenLabsMusicGeneration', specific_library_name='Griptape Nodes Library', node_name='Eleven Labs Music Generation', metadata={'position': {'x': 4299.873535566567, 'y': 579.8082350866819}, 'tempId': 'placing-1761416319184-uo28js', 'library_node_metadata': NodeMetadata(category='audio', description='Generate music from text prompts using Eleven Labs', display_name='Eleven Labs Music Generation', tags=None, icon='music', color=None, group='create', deprecation=None), 'library': 'Griptape Nodes Library', 'node_type': 'ElevenLabsMusicGeneration', 'showaddparameter': False, 'category': 'audio', 'size': {'width': 510, 'height': 659}}, initial_setup=True)).node_name
    node33_name = GriptapeNodes.handle_request(CreateNodeRequest(node_type='ElevenLabsTextToSpeechGeneration', specific_library_name='Griptape Nodes Library', node_name='Eleven Labs Text to Speech Generation', metadata={'position': {'x': 1704.8092381735098, 'y': -355.0107104439859}, 'tempId': 'placing-1761416228652-spno3k', 'library_node_metadata': NodeMetadata(category='audio', description='Generate speech from text using Eleven Labs text-to-speech models', display_name='Eleven Labs Text to Speech Generation', tags=None, icon='mic', color=None, group='create', deprecation=None), 'library': 'Griptape Nodes Library', 'node_type': 'ElevenLabsTextToSpeechGeneration', 'showaddparameter': False, 'category': 'audio', 'size': {'width': 516, 'height': 1159}}, initial_setup=True)).node_name
    with GriptapeNodes.ContextManager().node(node33_name):
        GriptapeNodes.handle_request(AlterParameterDetailsRequest(parameter_name='custom_voice_id', ui_options={'display_name': 'Custom Voice ID', 'hide': False, 'placeholder_text': 'e.g., 21m00Tcm4TlvDq8ikWAM'}, initial_setup=True))
        GriptapeNodes.handle_request(AlterParameterDetailsRequest(parameter_name='alignment', ui_options={'hide_property': True, 'hide': True}, initial_setup=True))
        GriptapeNodes.handle_request(AlterParameterDetailsRequest(parameter_name='normalized_alignment', ui_options={'hide_property': True, 'hide': True}, initial_setup=True))
    node34_name = GriptapeNodes.handle_request(CreateNodeRequest(node_type='Math', specific_library_name='Griptape Nodes Library', node_name='add_5', metadata={'position': {'x': 3392.338769567252, 'y': -252.73297597565812}, 'tempId': 'placing-1761270019633-kibz3', 'library_node_metadata': {'category': 'number', 'description': 'Perform mathematical operations on numbers'}, 'library': 'Griptape Nodes Library', 'node_type': 'Math', 'showaddparameter': False, 'category': 'number', 'size': {'width': 400, 'height': 284}}, initial_setup=True)).node_name
    with GriptapeNodes.ContextManager().node(node34_name):
        GriptapeNodes.handle_request(AlterParameterDetailsRequest(parameter_name='B', ui_options={'hide': False}, initial_setup=True))
    node35_name = GriptapeNodes.handle_request(CreateNodeRequest(node_type='Math', specific_library_name='Griptape Nodes Library', node_name='round_up', metadata={'position': {'x': 3838.2075938134476, 'y': -252.73297597565812}, 'tempId': 'placing-1761270019633-kibz3', 'library_node_metadata': NodeMetadata(category='number', description='Perform mathematical operations on numbers', display_name='Math', tags=None, icon='calculator', color=None, group='tasks', deprecation=None), 'library': 'Griptape Nodes Library', 'node_type': 'Math', 'showaddparameter': False, 'category': 'number', 'size': {'width': 400, 'height': 230}}, initial_setup=True)).node_name
    with GriptapeNodes.ContextManager().node(node35_name):
        GriptapeNodes.handle_request(AlterParameterDetailsRequest(parameter_name='B', ui_options={'hide': True}, initial_setup=True))
    node36_name = GriptapeNodes.handle_request(CreateNodeRequest(node_type='Math', specific_library_name='Griptape Nodes Library', node_name='min_at_least_10', metadata={'position': {'x': 4268.91679507518, 'y': -250.73297597565812}, 'tempId': 'placing-1761498071417-tt6pmoc', 'library_node_metadata': {'category': 'number', 'description': 'Perform mathematical operations on numbers'}, 'library': 'Griptape Nodes Library', 'node_type': 'Math', 'showaddparameter': False, 'category': 'number', 'size': {'width': 400, 'height': 284}}, initial_setup=True)).node_name
    with GriptapeNodes.ContextManager().node(node36_name):
        GriptapeNodes.handle_request(AlterParameterDetailsRequest(parameter_name='B', ui_options={'hide': False}, initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node2_name, source_parameter_name='dictionary', target_node_name=node1_name, target_parameter_name='input_variables', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node2_name, source_parameter_name='dictionary', target_node_name=node4_name, target_parameter_name='KeyValuePairs_ParameterListUniqueParamID_4d28ca50c44141539f12848d408bef11', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node6_name, source_parameter_name='output', target_node_name=node5_name, target_parameter_name='value', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node5_name, source_parameter_name='dictionary', target_node_name=node4_name, target_parameter_name='KeyValuePairs_ParameterListUniqueParamID_b82530a6986448a38f980f9cd1a97774', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node3_name, source_parameter_name='result', target_node_name=node7_name, target_parameter_name='text', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node7_name, source_parameter_name='text', target_node_name=node10_name, target_parameter_name='additional_context', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node10_name, source_parameter_name='output', target_node_name=node11_name, target_parameter_name='input_2', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node1_name, source_parameter_name='result', target_node_name=node12_name, target_parameter_name='text', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node13_name, source_parameter_name='duration', target_node_name=node34_name, target_parameter_name='A', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node34_name, source_parameter_name='result', target_node_name=node35_name, target_parameter_name='A', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node7_name, source_parameter_name='exec_out', target_node_name=node10_name, target_parameter_name='exec_in', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node10_name, source_parameter_name='output', target_node_name=node22_name, target_parameter_name='additional_context', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node12_name, source_parameter_name='output', target_node_name=node27_name, target_parameter_name='keys', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node24_name, source_parameter_name='topic', target_node_name=node29_name, target_parameter_name='additional_context', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node0_name, source_parameter_name='ruleset', target_node_name=node29_name, target_parameter_name='rulesets_ParameterListUniqueParamID_0150a52757ad4a0b9e0c98230e7b0da2', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node8_name, source_parameter_name='ruleset', target_node_name=node29_name, target_parameter_name='rulesets_ParameterListUniqueParamID_3bf3ee9de1394507b71a06a6c3c5b660', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node29_name, source_parameter_name='output', target_node_name=node2_name, target_parameter_name='value', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node4_name, source_parameter_name='output', target_node_name=node3_name, target_parameter_name='input_variables', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node27_name, source_parameter_name='KeyValuePairs', target_node_name=node6_name, target_parameter_name='from', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node10_name, source_parameter_name='output', target_node_name=node33_name, target_parameter_name='text', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node9_name, source_parameter_name='voice_preset', target_node_name=node33_name, target_parameter_name='voice_preset', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node9_name, source_parameter_name='custom_voice_id', target_node_name=node33_name, target_parameter_name='custom_voice_id', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node33_name, source_parameter_name='audio_url', target_node_name=node13_name, target_parameter_name='audio', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node11_name, source_parameter_name='output', target_node_name=node32_name, target_parameter_name='text', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node22_name, source_parameter_name='output', target_node_name=node30_name, target_parameter_name='prompt', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node33_name, source_parameter_name='audio_url', target_node_name=node31_name, target_parameter_name='track1_audio', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node32_name, source_parameter_name='audio_url', target_node_name=node31_name, target_parameter_name='track2_audio', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node30_name, source_parameter_name='image_url', target_node_name=node25_name, target_parameter_name='image_url', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node24_name, source_parameter_name='exec_out', target_node_name=node29_name, target_parameter_name='exec_in', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node29_name, source_parameter_name='exec_out', target_node_name=node2_name, target_parameter_name='exec_in', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node2_name, source_parameter_name='exec_out', target_node_name=node1_name, target_parameter_name='exec_in', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node1_name, source_parameter_name='exec_out', target_node_name=node12_name, target_parameter_name='exec_in', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node12_name, source_parameter_name='exec_out', target_node_name=node27_name, target_parameter_name='exec_in', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node27_name, source_parameter_name='exec_out', target_node_name=node6_name, target_parameter_name='exec_in', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node6_name, source_parameter_name='exec_out', target_node_name=node5_name, target_parameter_name='exec_in', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node5_name, source_parameter_name='exec_out', target_node_name=node4_name, target_parameter_name='exec_in', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node4_name, source_parameter_name='exec_out', target_node_name=node3_name, target_parameter_name='exec_in', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node3_name, source_parameter_name='exec_out', target_node_name=node7_name, target_parameter_name='exec_in', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node10_name, source_parameter_name='exec_out', target_node_name=node9_name, target_parameter_name='exec_in', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node9_name, source_parameter_name='exec_out', target_node_name=node33_name, target_parameter_name='exec_in', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node33_name, source_parameter_name='exec_out', target_node_name=node13_name, target_parameter_name='exec_in', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node13_name, source_parameter_name='exec_out', target_node_name=node11_name, target_parameter_name='exec_in', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node11_name, source_parameter_name='exec_out', target_node_name=node32_name, target_parameter_name='exec_in', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node32_name, source_parameter_name='exec_out', target_node_name=node31_name, target_parameter_name='exec_in', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node31_name, source_parameter_name='exec_out', target_node_name=node22_name, target_parameter_name='exec_in', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node22_name, source_parameter_name='exec_out', target_node_name=node30_name, target_parameter_name='exec_in', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node30_name, source_parameter_name='exec_out', target_node_name=node25_name, target_parameter_name='exec_in', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node31_name, source_parameter_name='mixed_audio', target_node_name=node25_name, target_parameter_name='mixed_audio', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node35_name, source_parameter_name='result', target_node_name=node36_name, target_parameter_name='B', initial_setup=True))
    GriptapeNodes.handle_request(CreateConnectionRequest(source_node_name=node36_name, source_parameter_name='result', target_node_name=node32_name, target_parameter_name='music_duration_seconds', initial_setup=True))
    with GriptapeNodes.ContextManager().node(node0_name):
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='execution_environment', node_name=node0_name, value=top_level_unique_values_dict['4b5833de-2ef8-4744-b445-f221923b8ab3'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='job_group', node_name=node0_name, value=top_level_unique_values_dict['b87b544c-b5c9-488f-90bf-d0a5f8cd19a9'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='name', node_name=node0_name, value=top_level_unique_values_dict['a8732fcd-9ae2-4088-aa7b-f34542d9079b'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='rules', node_name=node0_name, value=top_level_unique_values_dict['69597aaf-2872-40b4-9816-a5d80bc932ac'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='ruleset', node_name=node0_name, value=top_level_unique_values_dict['c02293c4-5a48-4caa-bcee-dfa0d819548a'], initial_setup=True, is_output=True))
    with GriptapeNodes.ContextManager().node(node1_name):
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='execution_environment', node_name=node1_name, value=top_level_unique_values_dict['4b5833de-2ef8-4744-b445-f221923b8ab3'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='job_group', node_name=node1_name, value=top_level_unique_values_dict['b87b544c-b5c9-488f-90bf-d0a5f8cd19a9'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='python_code', node_name=node1_name, value=top_level_unique_values_dict['296e2f16-f25c-47f5-89f0-744df56c25a8'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='input_variables', node_name=node1_name, value=top_level_unique_values_dict['e5614552-9a15-4bf1-940e-11e5b1144bae'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='result', node_name=node1_name, value=top_level_unique_values_dict['582ab304-cdaf-4096-8aef-faa17de6353a'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='was_successful', node_name=node1_name, value=top_level_unique_values_dict['1cbb641b-ee98-49ba-836a-3a354638ceac'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='was_successful', node_name=node1_name, value=top_level_unique_values_dict['1cbb641b-ee98-49ba-836a-3a354638ceac'], initial_setup=True, is_output=True))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='result_details', node_name=node1_name, value=top_level_unique_values_dict['e431f359-9857-4986-87c3-91745f92bbf7'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='result_details', node_name=node1_name, value=top_level_unique_values_dict['e431f359-9857-4986-87c3-91745f92bbf7'], initial_setup=True, is_output=True))
    with GriptapeNodes.ContextManager().node(node2_name):
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='execution_environment', node_name=node2_name, value=top_level_unique_values_dict['4b5833de-2ef8-4744-b445-f221923b8ab3'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='job_group', node_name=node2_name, value=top_level_unique_values_dict['b87b544c-b5c9-488f-90bf-d0a5f8cd19a9'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='key', node_name=node2_name, value=top_level_unique_values_dict['e994b6aa-d218-4ab8-90e3-b820b36f81ed'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='value', node_name=node2_name, value=top_level_unique_values_dict['97dcbe85-3d0a-401d-9e31-238903edd69f'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='dictionary', node_name=node2_name, value=top_level_unique_values_dict['438bacc2-1c35-44dc-8d8a-10b79b4cc933'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='dictionary', node_name=node2_name, value=top_level_unique_values_dict['e5614552-9a15-4bf1-940e-11e5b1144bae'], initial_setup=True, is_output=True))
    with GriptapeNodes.ContextManager().node(node3_name):
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='execution_environment', node_name=node3_name, value=top_level_unique_values_dict['4b5833de-2ef8-4744-b445-f221923b8ab3'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='job_group', node_name=node3_name, value=top_level_unique_values_dict['b87b544c-b5c9-488f-90bf-d0a5f8cd19a9'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='python_code', node_name=node3_name, value=top_level_unique_values_dict['7cfaef67-25b1-46ed-8e99-0b206ddbfa8c'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='input_variables', node_name=node3_name, value=top_level_unique_values_dict['71c7dada-7209-48c1-afec-efe049175ebb'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='result', node_name=node3_name, value=top_level_unique_values_dict['a6e46050-0c26-467e-8faf-7ade6dae3f62'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='was_successful', node_name=node3_name, value=top_level_unique_values_dict['1cbb641b-ee98-49ba-836a-3a354638ceac'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='was_successful', node_name=node3_name, value=top_level_unique_values_dict['1cbb641b-ee98-49ba-836a-3a354638ceac'], initial_setup=True, is_output=True))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='result_details', node_name=node3_name, value=top_level_unique_values_dict['e431f359-9857-4986-87c3-91745f92bbf7'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='result_details', node_name=node3_name, value=top_level_unique_values_dict['e431f359-9857-4986-87c3-91745f92bbf7'], initial_setup=True, is_output=True))
    with GriptapeNodes.ContextManager().node(node4_name):
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='execution_environment', node_name=node4_name, value=top_level_unique_values_dict['4b5833de-2ef8-4744-b445-f221923b8ab3'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='job_group', node_name=node4_name, value=top_level_unique_values_dict['b87b544c-b5c9-488f-90bf-d0a5f8cd19a9'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='KeyValuePairs', node_name=node4_name, value=top_level_unique_values_dict['a2bbcd7f-d0f6-499e-94a2-2dab0670e7bc'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='KeyValuePairs_ParameterListUniqueParamID_b82530a6986448a38f980f9cd1a97774', node_name=node4_name, value=top_level_unique_values_dict['5823b31e-ad66-4a2c-a7dc-7cea4affc557'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='KeyValuePairs_ParameterListUniqueParamID_4d28ca50c44141539f12848d408bef11', node_name=node4_name, value=top_level_unique_values_dict['e5614552-9a15-4bf1-940e-11e5b1144bae'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='output', node_name=node4_name, value=top_level_unique_values_dict['b87b544c-b5c9-488f-90bf-d0a5f8cd19a9'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='output', node_name=node4_name, value=top_level_unique_values_dict['71c7dada-7209-48c1-afec-efe049175ebb'], initial_setup=True, is_output=True))
    with GriptapeNodes.ContextManager().node(node5_name):
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='execution_environment', node_name=node5_name, value=top_level_unique_values_dict['4b5833de-2ef8-4744-b445-f221923b8ab3'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='job_group', node_name=node5_name, value=top_level_unique_values_dict['b87b544c-b5c9-488f-90bf-d0a5f8cd19a9'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='key', node_name=node5_name, value=top_level_unique_values_dict['ad75d58d-61f7-4f90-a067-1e8eddba8e74'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='value', node_name=node5_name, value=top_level_unique_values_dict['d19a142c-73e3-4cc5-b577-4c9d50da3683'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='dictionary', node_name=node5_name, value=top_level_unique_values_dict['e80e1f2d-c078-4c21-9aeb-b7552ea90d06'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='dictionary', node_name=node5_name, value=top_level_unique_values_dict['5823b31e-ad66-4a2c-a7dc-7cea4affc557'], initial_setup=True, is_output=True))
    with GriptapeNodes.ContextManager().node(node6_name):
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='execution_environment', node_name=node6_name, value=top_level_unique_values_dict['4b5833de-2ef8-4744-b445-f221923b8ab3'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='job_group', node_name=node6_name, value=top_level_unique_values_dict['b87b544c-b5c9-488f-90bf-d0a5f8cd19a9'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='from', node_name=node6_name, value=top_level_unique_values_dict['f7b51772-0992-46f8-8a05-a894a4d3cbf4'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='output', node_name=node6_name, value=top_level_unique_values_dict['9bd18886-9533-4712-8370-5572d8e80239'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='output', node_name=node6_name, value=top_level_unique_values_dict['d19a142c-73e3-4cc5-b577-4c9d50da3683'], initial_setup=True, is_output=True))
    with GriptapeNodes.ContextManager().node(node7_name):
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='execution_environment', node_name=node7_name, value=top_level_unique_values_dict['4b5833de-2ef8-4744-b445-f221923b8ab3'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='job_group', node_name=node7_name, value=top_level_unique_values_dict['b87b544c-b5c9-488f-90bf-d0a5f8cd19a9'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='text', node_name=node7_name, value=top_level_unique_values_dict['a6e46050-0c26-467e-8faf-7ade6dae3f62'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='text', node_name=node7_name, value=top_level_unique_values_dict['a6e46050-0c26-467e-8faf-7ade6dae3f62'], initial_setup=True, is_output=True))
    with GriptapeNodes.ContextManager().node(node8_name):
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='name', node_name=node8_name, value=top_level_unique_values_dict['604300f9-5c3e-4d12-a630-f5a4488cf6f5'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='rules', node_name=node8_name, value=top_level_unique_values_dict['62377285-6a00-46d7-b3e2-7bca43246525'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='ruleset', node_name=node8_name, value=top_level_unique_values_dict['65fd0616-a18f-49d8-bed6-44452768a4c9'], initial_setup=True, is_output=True))
    with GriptapeNodes.ContextManager().node(node9_name):
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='execution_environment', node_name=node9_name, value=top_level_unique_values_dict['4b5833de-2ef8-4744-b445-f221923b8ab3'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='job_group', node_name=node9_name, value=top_level_unique_values_dict['b87b544c-b5c9-488f-90bf-d0a5f8cd19a9'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='text', node_name=node9_name, value=top_level_unique_values_dict['3fac0e80-fddf-441a-8664-34f3989162f5'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='text', node_name=node9_name, value=top_level_unique_values_dict['3fac0e80-fddf-441a-8664-34f3989162f5'], initial_setup=True, is_output=True))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='voice_preset', node_name=node9_name, value=top_level_unique_values_dict['62b1a52f-090a-432a-a6e9-1e7b128855a4'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='custom_voice_id', node_name=node9_name, value=top_level_unique_values_dict['a113a55d-4c29-40c1-b42f-d78a1d81d2af'], initial_setup=True, is_output=False))
    with GriptapeNodes.ContextManager().node(node10_name):
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='execution_environment', node_name=node10_name, value=top_level_unique_values_dict['4b5833de-2ef8-4744-b445-f221923b8ab3'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='job_group', node_name=node10_name, value=top_level_unique_values_dict['b87b544c-b5c9-488f-90bf-d0a5f8cd19a9'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='agent', node_name=node10_name, value=top_level_unique_values_dict['85ea6117-648f-41e3-8cba-4b626fdb8c66'], initial_setup=True, is_output=True))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='model', node_name=node10_name, value=top_level_unique_values_dict['c0fcbffa-1ca6-4f59-8b91-17f4f1f48709'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='prompt', node_name=node10_name, value=top_level_unique_values_dict['5a9adbce-494b-4429-aeeb-28aba0b9eae2'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='additional_context', node_name=node10_name, value=top_level_unique_values_dict['a6e46050-0c26-467e-8faf-7ade6dae3f62'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='tools', node_name=node10_name, value=top_level_unique_values_dict['e2f1ad8e-efe1-44dc-8954-07cdc0bf96f9'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='rulesets', node_name=node10_name, value=top_level_unique_values_dict['11bcb7d1-a128-4160-800c-6ed8d9f4662b'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='output', node_name=node10_name, value=top_level_unique_values_dict['b87b544c-b5c9-488f-90bf-d0a5f8cd19a9'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='output', node_name=node10_name, value=top_level_unique_values_dict['0c6eba99-96fc-4eba-8c01-3c68b76b15fa'], initial_setup=True, is_output=True))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='include_details', node_name=node10_name, value=top_level_unique_values_dict['1cbb641b-ee98-49ba-836a-3a354638ceac'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='logs', node_name=node10_name, value=top_level_unique_values_dict['7bc4a014-639e-458e-b170-f353dd3ce64c'], initial_setup=True, is_output=True))
    with GriptapeNodes.ContextManager().node(node11_name):
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='execution_environment', node_name=node11_name, value=top_level_unique_values_dict['4b5833de-2ef8-4744-b445-f221923b8ab3'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='job_group', node_name=node11_name, value=top_level_unique_values_dict['b87b544c-b5c9-488f-90bf-d0a5f8cd19a9'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='input_1', node_name=node11_name, value=top_level_unique_values_dict['12436802-1100-47aa-b0d6-88da1314e289'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='input_2', node_name=node11_name, value=top_level_unique_values_dict['0c6eba99-96fc-4eba-8c01-3c68b76b15fa'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='input_3', node_name=node11_name, value=top_level_unique_values_dict['b87b544c-b5c9-488f-90bf-d0a5f8cd19a9'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='input_4', node_name=node11_name, value=top_level_unique_values_dict['b87b544c-b5c9-488f-90bf-d0a5f8cd19a9'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='merge_string', node_name=node11_name, value=top_level_unique_values_dict['153483c7-c749-4cfe-b621-d53add85a9a5'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='output', node_name=node11_name, value=top_level_unique_values_dict['5de5f6f0-540c-4d44-96a3-0b93d9378cd2'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='output', node_name=node11_name, value=top_level_unique_values_dict['5de5f6f0-540c-4d44-96a3-0b93d9378cd2'], initial_setup=True, is_output=True))
    with GriptapeNodes.ContextManager().node(node12_name):
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='execution_environment', node_name=node12_name, value=top_level_unique_values_dict['4b5833de-2ef8-4744-b445-f221923b8ab3'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='job_group', node_name=node12_name, value=top_level_unique_values_dict['b87b544c-b5c9-488f-90bf-d0a5f8cd19a9'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='text', node_name=node12_name, value=top_level_unique_values_dict['582ab304-cdaf-4096-8aef-faa17de6353a'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='split_mode', node_name=node12_name, value=top_level_unique_values_dict['33f8563a-237d-4af2-8e56-a115ff73d94a'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='delimiter_type', node_name=node12_name, value=top_level_unique_values_dict['4b13faa2-46eb-4668-8a48-db632b5224c5'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='include_delimiter', node_name=node12_name, value=top_level_unique_values_dict['1cbb641b-ee98-49ba-836a-3a354638ceac'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='trim_whitespace', node_name=node12_name, value=top_level_unique_values_dict['27a2f338-891f-4c7d-9360-b4d4f1333850'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='output', node_name=node12_name, value=top_level_unique_values_dict['9ffd71bf-c100-4cf0-bcd7-9b57db7a90a8'], initial_setup=True, is_output=True))
    with GriptapeNodes.ContextManager().node(node13_name):
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='execution_environment', node_name=node13_name, value=top_level_unique_values_dict['4b5833de-2ef8-4744-b445-f221923b8ab3'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='job_group', node_name=node13_name, value=top_level_unique_values_dict['b87b544c-b5c9-488f-90bf-d0a5f8cd19a9'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='duration', node_name=node13_name, value=top_level_unique_values_dict['120b3dc9-1929-46f4-b24e-31404c42c0f5'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='duration', node_name=node13_name, value=top_level_unique_values_dict['120b3dc9-1929-46f4-b24e-31404c42c0f5'], initial_setup=True, is_output=True))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='format', node_name=node13_name, value=top_level_unique_values_dict['ca33b938-78e3-46e4-b6ba-d7af0ee7a3f1'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='format', node_name=node13_name, value=top_level_unique_values_dict['ca33b938-78e3-46e4-b6ba-d7af0ee7a3f1'], initial_setup=True, is_output=True))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='file_size', node_name=node13_name, value=top_level_unique_values_dict['dea7bec3-85a6-43ce-a218-7e216f4e195a'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='file_size', node_name=node13_name, value=top_level_unique_values_dict['dea7bec3-85a6-43ce-a218-7e216f4e195a'], initial_setup=True, is_output=True))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='sample_rate', node_name=node13_name, value=top_level_unique_values_dict['dea7bec3-85a6-43ce-a218-7e216f4e195a'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='sample_rate', node_name=node13_name, value=top_level_unique_values_dict['dea7bec3-85a6-43ce-a218-7e216f4e195a'], initial_setup=True, is_output=True))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='channels', node_name=node13_name, value=top_level_unique_values_dict['dea7bec3-85a6-43ce-a218-7e216f4e195a'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='channels', node_name=node13_name, value=top_level_unique_values_dict['dea7bec3-85a6-43ce-a218-7e216f4e195a'], initial_setup=True, is_output=True))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='bitrate', node_name=node13_name, value=top_level_unique_values_dict['dea7bec3-85a6-43ce-a218-7e216f4e195a'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='bitrate', node_name=node13_name, value=top_level_unique_values_dict['dea7bec3-85a6-43ce-a218-7e216f4e195a'], initial_setup=True, is_output=True))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='codec', node_name=node13_name, value=top_level_unique_values_dict['ca33b938-78e3-46e4-b6ba-d7af0ee7a3f1'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='codec', node_name=node13_name, value=top_level_unique_values_dict['ca33b938-78e3-46e4-b6ba-d7af0ee7a3f1'], initial_setup=True, is_output=True))
    with GriptapeNodes.ContextManager().node(node14_name):
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='execution_environment', node_name=node14_name, value=top_level_unique_values_dict['4b5833de-2ef8-4744-b445-f221923b8ab3'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='job_group', node_name=node14_name, value=top_level_unique_values_dict['b87b544c-b5c9-488f-90bf-d0a5f8cd19a9'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='note', node_name=node14_name, value=top_level_unique_values_dict['f666419a-6d69-473c-8e30-a38ea38bd98f'], initial_setup=True, is_output=False))
    with GriptapeNodes.ContextManager().node(node15_name):
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='execution_environment', node_name=node15_name, value=top_level_unique_values_dict['4b5833de-2ef8-4744-b445-f221923b8ab3'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='job_group', node_name=node15_name, value=top_level_unique_values_dict['b87b544c-b5c9-488f-90bf-d0a5f8cd19a9'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='note', node_name=node15_name, value=top_level_unique_values_dict['e3da6be3-1f4c-41c6-9981-586819c5aa8a'], initial_setup=True, is_output=False))
    with GriptapeNodes.ContextManager().node(node16_name):
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='execution_environment', node_name=node16_name, value=top_level_unique_values_dict['4b5833de-2ef8-4744-b445-f221923b8ab3'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='job_group', node_name=node16_name, value=top_level_unique_values_dict['b87b544c-b5c9-488f-90bf-d0a5f8cd19a9'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='note', node_name=node16_name, value=top_level_unique_values_dict['a21fff4c-9653-4d30-b547-e3c0d71f2aa1'], initial_setup=True, is_output=False))
    with GriptapeNodes.ContextManager().node(node17_name):
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='execution_environment', node_name=node17_name, value=top_level_unique_values_dict['4b5833de-2ef8-4744-b445-f221923b8ab3'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='job_group', node_name=node17_name, value=top_level_unique_values_dict['b87b544c-b5c9-488f-90bf-d0a5f8cd19a9'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='note', node_name=node17_name, value=top_level_unique_values_dict['6ccaba6b-b720-42a3-8ee2-93a83227b4b0'], initial_setup=True, is_output=False))
    with GriptapeNodes.ContextManager().node(node18_name):
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='execution_environment', node_name=node18_name, value=top_level_unique_values_dict['4b5833de-2ef8-4744-b445-f221923b8ab3'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='job_group', node_name=node18_name, value=top_level_unique_values_dict['b87b544c-b5c9-488f-90bf-d0a5f8cd19a9'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='note', node_name=node18_name, value=top_level_unique_values_dict['19eec4ed-e6de-4072-ba11-ed1270313212'], initial_setup=True, is_output=False))
    with GriptapeNodes.ContextManager().node(node19_name):
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='execution_environment', node_name=node19_name, value=top_level_unique_values_dict['4b5833de-2ef8-4744-b445-f221923b8ab3'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='job_group', node_name=node19_name, value=top_level_unique_values_dict['b87b544c-b5c9-488f-90bf-d0a5f8cd19a9'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='note', node_name=node19_name, value=top_level_unique_values_dict['6c6528f5-c7fb-4282-8359-d32b88fdbdbd'], initial_setup=True, is_output=False))
    with GriptapeNodes.ContextManager().node(node20_name):
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='execution_environment', node_name=node20_name, value=top_level_unique_values_dict['4b5833de-2ef8-4744-b445-f221923b8ab3'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='job_group', node_name=node20_name, value=top_level_unique_values_dict['b87b544c-b5c9-488f-90bf-d0a5f8cd19a9'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='note', node_name=node20_name, value=top_level_unique_values_dict['9d1aef9d-0001-4149-95bb-612baa8164f1'], initial_setup=True, is_output=False))
    with GriptapeNodes.ContextManager().node(node21_name):
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='execution_environment', node_name=node21_name, value=top_level_unique_values_dict['4b5833de-2ef8-4744-b445-f221923b8ab3'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='job_group', node_name=node21_name, value=top_level_unique_values_dict['b87b544c-b5c9-488f-90bf-d0a5f8cd19a9'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='note', node_name=node21_name, value=top_level_unique_values_dict['af030620-484c-4afc-a5cb-ada5b04da3ad'], initial_setup=True, is_output=False))
    with GriptapeNodes.ContextManager().node(node22_name):
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='execution_environment', node_name=node22_name, value=top_level_unique_values_dict['4b5833de-2ef8-4744-b445-f221923b8ab3'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='job_group', node_name=node22_name, value=top_level_unique_values_dict['b87b544c-b5c9-488f-90bf-d0a5f8cd19a9'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='agent', node_name=node22_name, value=top_level_unique_values_dict['1d6b2a26-8652-4c8c-a4bb-ce0ec8479d95'], initial_setup=True, is_output=True))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='model', node_name=node22_name, value=top_level_unique_values_dict['a56f0a54-9073-4298-9b7d-0d7e92066117'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='prompt', node_name=node22_name, value=top_level_unique_values_dict['52310fbc-7042-46d8-92e2-b8af5e00e989'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='additional_context', node_name=node22_name, value=top_level_unique_values_dict['0c6eba99-96fc-4eba-8c01-3c68b76b15fa'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='tools', node_name=node22_name, value=top_level_unique_values_dict['49982319-8bbe-43ad-b474-de00a7dcae49'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='rulesets', node_name=node22_name, value=top_level_unique_values_dict['582ac9ba-68dc-4c63-89a3-685c1a0de854'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='output', node_name=node22_name, value=top_level_unique_values_dict['b87b544c-b5c9-488f-90bf-d0a5f8cd19a9'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='output', node_name=node22_name, value=top_level_unique_values_dict['11ecf7a1-5087-4a22-bd84-cfcf24e98719'], initial_setup=True, is_output=True))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='include_details', node_name=node22_name, value=top_level_unique_values_dict['1cbb641b-ee98-49ba-836a-3a354638ceac'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='logs', node_name=node22_name, value=top_level_unique_values_dict['7bc4a014-639e-458e-b170-f353dd3ce64c'], initial_setup=True, is_output=True))
    with GriptapeNodes.ContextManager().node(node23_name):
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='execution_environment', node_name=node23_name, value=top_level_unique_values_dict['4b5833de-2ef8-4744-b445-f221923b8ab3'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='job_group', node_name=node23_name, value=top_level_unique_values_dict['b87b544c-b5c9-488f-90bf-d0a5f8cd19a9'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='note', node_name=node23_name, value=top_level_unique_values_dict['9c52d4fc-86a5-40b9-8db8-d396507c36b7'], initial_setup=True, is_output=False))
    with GriptapeNodes.ContextManager().node(node24_name):
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='execution_environment', node_name=node24_name, value=top_level_unique_values_dict['4b5833de-2ef8-4744-b445-f221923b8ab3'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='job_group', node_name=node24_name, value=top_level_unique_values_dict['b87b544c-b5c9-488f-90bf-d0a5f8cd19a9'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='topic', node_name=node24_name, value=top_level_unique_values_dict['2235c8d4-2c92-4258-8bea-c257762f08c8'], initial_setup=True, is_output=False))
    with GriptapeNodes.ContextManager().node(node25_name):
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='execution_environment', node_name=node25_name, value=top_level_unique_values_dict['4b5833de-2ef8-4744-b445-f221923b8ab3'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='execution_environment', node_name=node25_name, value=top_level_unique_values_dict['4b5833de-2ef8-4744-b445-f221923b8ab3'], initial_setup=True, is_output=True))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='job_group', node_name=node25_name, value=top_level_unique_values_dict['b87b544c-b5c9-488f-90bf-d0a5f8cd19a9'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='job_group', node_name=node25_name, value=top_level_unique_values_dict['b87b544c-b5c9-488f-90bf-d0a5f8cd19a9'], initial_setup=True, is_output=True))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='was_successful', node_name=node25_name, value=top_level_unique_values_dict['27a2f338-891f-4c7d-9360-b4d4f1333850'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='was_successful', node_name=node25_name, value=top_level_unique_values_dict['27a2f338-891f-4c7d-9360-b4d4f1333850'], initial_setup=True, is_output=True))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='result_details', node_name=node25_name, value=top_level_unique_values_dict['bfe7e553-a516-450a-a40b-ad2ee4a0b730'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='result_details', node_name=node25_name, value=top_level_unique_values_dict['bfe7e553-a516-450a-a40b-ad2ee4a0b730'], initial_setup=True, is_output=True))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='mixed_audio', node_name=node25_name, value=top_level_unique_values_dict['b8b61c09-25fa-4e09-b27e-522abfd388b8'], initial_setup=True, is_output=True))
    with GriptapeNodes.ContextManager().node(node26_name):
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='execution_environment', node_name=node26_name, value=top_level_unique_values_dict['4b5833de-2ef8-4744-b445-f221923b8ab3'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='job_group', node_name=node26_name, value=top_level_unique_values_dict['b87b544c-b5c9-488f-90bf-d0a5f8cd19a9'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='note', node_name=node26_name, value=top_level_unique_values_dict['3b949d0b-d4aa-4036-b0c6-454a4a2e6d53'], initial_setup=True, is_output=False))
    with GriptapeNodes.ContextManager().node(node27_name):
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='execution_environment', node_name=node27_name, value=top_level_unique_values_dict['4b5833de-2ef8-4744-b445-f221923b8ab3'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='job_group', node_name=node27_name, value=top_level_unique_values_dict['b87b544c-b5c9-488f-90bf-d0a5f8cd19a9'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='keys', node_name=node27_name, value=top_level_unique_values_dict['9ffd71bf-c100-4cf0-bcd7-9b57db7a90a8'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='maintain_duplicates', node_name=node27_name, value=top_level_unique_values_dict['1cbb641b-ee98-49ba-836a-3a354638ceac'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='KeyValuePairs', node_name=node27_name, value=top_level_unique_values_dict['f7b51772-0992-46f8-8a05-a894a4d3cbf4'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='KeyValuePairs', node_name=node27_name, value=top_level_unique_values_dict['f7b51772-0992-46f8-8a05-a894a4d3cbf4'], initial_setup=True, is_output=True))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='was_successful', node_name=node27_name, value=top_level_unique_values_dict['1cbb641b-ee98-49ba-836a-3a354638ceac'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='was_successful', node_name=node27_name, value=top_level_unique_values_dict['1cbb641b-ee98-49ba-836a-3a354638ceac'], initial_setup=True, is_output=True))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='result_details', node_name=node27_name, value=top_level_unique_values_dict['e431f359-9857-4986-87c3-91745f92bbf7'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='result_details', node_name=node27_name, value=top_level_unique_values_dict['e431f359-9857-4986-87c3-91745f92bbf7'], initial_setup=True, is_output=True))
    with GriptapeNodes.ContextManager().node(node28_name):
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='execution_environment', node_name=node28_name, value=top_level_unique_values_dict['4b5833de-2ef8-4744-b445-f221923b8ab3'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='job_group', node_name=node28_name, value=top_level_unique_values_dict['b87b544c-b5c9-488f-90bf-d0a5f8cd19a9'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='note', node_name=node28_name, value=top_level_unique_values_dict['3916e42b-c7b9-43dd-8338-fc7f5c7acd15'], initial_setup=True, is_output=False))
    with GriptapeNodes.ContextManager().node(node29_name):
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='execution_environment', node_name=node29_name, value=top_level_unique_values_dict['4b5833de-2ef8-4744-b445-f221923b8ab3'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='job_group', node_name=node29_name, value=top_level_unique_values_dict['b87b544c-b5c9-488f-90bf-d0a5f8cd19a9'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='agent', node_name=node29_name, value=top_level_unique_values_dict['3898d69e-933b-4896-9ea4-0aa0eff76762'], initial_setup=True, is_output=True))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='model', node_name=node29_name, value=top_level_unique_values_dict['a56f0a54-9073-4298-9b7d-0d7e92066117'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='prompt', node_name=node29_name, value=top_level_unique_values_dict['91178c46-7b25-4cb5-9d10-dfa0efe64ef9'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='additional_context', node_name=node29_name, value=top_level_unique_values_dict['2235c8d4-2c92-4258-8bea-c257762f08c8'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='tools', node_name=node29_name, value=top_level_unique_values_dict['b83f2b19-f941-454a-9217-c40f073545f8'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='rulesets', node_name=node29_name, value=top_level_unique_values_dict['469cce78-650e-41e4-b4d1-712879d55d10'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='rulesets_ParameterListUniqueParamID_0150a52757ad4a0b9e0c98230e7b0da2', node_name=node29_name, value=top_level_unique_values_dict['c02293c4-5a48-4caa-bcee-dfa0d819548a'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='rulesets_ParameterListUniqueParamID_3bf3ee9de1394507b71a06a6c3c5b660', node_name=node29_name, value=top_level_unique_values_dict['65fd0616-a18f-49d8-bed6-44452768a4c9'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='output', node_name=node29_name, value=top_level_unique_values_dict['b87b544c-b5c9-488f-90bf-d0a5f8cd19a9'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='output', node_name=node29_name, value=top_level_unique_values_dict['97dcbe85-3d0a-401d-9e31-238903edd69f'], initial_setup=True, is_output=True))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='include_details', node_name=node29_name, value=top_level_unique_values_dict['1cbb641b-ee98-49ba-836a-3a354638ceac'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='logs', node_name=node29_name, value=top_level_unique_values_dict['7bc4a014-639e-458e-b170-f353dd3ce64c'], initial_setup=True, is_output=True))
    with GriptapeNodes.ContextManager().node(node30_name):
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='prompt', node_name=node30_name, value=top_level_unique_values_dict['11ecf7a1-5087-4a22-bd84-cfcf24e98719'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='seed', node_name=node30_name, value=top_level_unique_values_dict['0bd2a1d2-4bdd-43e1-96e4-eb377a35c86d'], initial_setup=True, is_output=False))
    with GriptapeNodes.ContextManager().node(node31_name):
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='track2_volume', node_name=node31_name, value=top_level_unique_values_dict['5cb1a528-9fec-4f15-bf47-78885a8e7b10'], initial_setup=True, is_output=False))
    with GriptapeNodes.ContextManager().node(node32_name):
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='text', node_name=node32_name, value=top_level_unique_values_dict['5de5f6f0-540c-4d44-96a3-0b93d9378cd2'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='music_duration_seconds', node_name=node32_name, value=top_level_unique_values_dict['0675d7a4-f12b-47ed-92aa-7884c7ef0476'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='force_instrumental', node_name=node32_name, value=top_level_unique_values_dict['27a2f338-891f-4c7d-9360-b4d4f1333850'], initial_setup=True, is_output=False))
    with GriptapeNodes.ContextManager().node(node33_name):
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='text', node_name=node33_name, value=top_level_unique_values_dict['0c6eba99-96fc-4eba-8c01-3c68b76b15fa'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='voice_preset', node_name=node33_name, value=top_level_unique_values_dict['62b1a52f-090a-432a-a6e9-1e7b128855a4'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='custom_voice_id', node_name=node33_name, value=top_level_unique_values_dict['a113a55d-4c29-40c1-b42f-d78a1d81d2af'], initial_setup=True, is_output=False))
    with GriptapeNodes.ContextManager().node(node34_name):
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='execution_environment', node_name=node34_name, value=top_level_unique_values_dict['4b5833de-2ef8-4744-b445-f221923b8ab3'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='job_group', node_name=node34_name, value=top_level_unique_values_dict['b87b544c-b5c9-488f-90bf-d0a5f8cd19a9'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='operation', node_name=node34_name, value=top_level_unique_values_dict['41a49906-41bc-4569-a1f5-7361ef2ef3b2'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='A', node_name=node34_name, value=top_level_unique_values_dict['8393b864-4264-4b75-bf1c-994d038b959e'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='B', node_name=node34_name, value=top_level_unique_values_dict['1ac6e33f-511e-4caf-a1ee-a16714099a9f'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='result', node_name=node34_name, value=top_level_unique_values_dict['120b3dc9-1929-46f4-b24e-31404c42c0f5'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='result', node_name=node34_name, value=top_level_unique_values_dict['198ab34c-fe16-4bc9-a6c5-4ef75feb4043'], initial_setup=True, is_output=True))
    with GriptapeNodes.ContextManager().node(node35_name):
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='execution_environment', node_name=node35_name, value=top_level_unique_values_dict['4b5833de-2ef8-4744-b445-f221923b8ab3'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='job_group', node_name=node35_name, value=top_level_unique_values_dict['b87b544c-b5c9-488f-90bf-d0a5f8cd19a9'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='operation', node_name=node35_name, value=top_level_unique_values_dict['1ca5e310-b302-4e00-bbb1-10c8924fa8ec'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='A', node_name=node35_name, value=top_level_unique_values_dict['198ab34c-fe16-4bc9-a6c5-4ef75feb4043'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='B', node_name=node35_name, value=top_level_unique_values_dict['150ea223-9214-464e-b71f-35e8ef731408'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='result', node_name=node35_name, value=top_level_unique_values_dict['120b3dc9-1929-46f4-b24e-31404c42c0f5'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='result', node_name=node35_name, value=top_level_unique_values_dict['0675d7a4-f12b-47ed-92aa-7884c7ef0476'], initial_setup=True, is_output=True))
    with GriptapeNodes.ContextManager().node(node36_name):
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='operation', node_name=node36_name, value=top_level_unique_values_dict['febe3f70-82ed-4f56-94ce-9d011b616926'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='A', node_name=node36_name, value=top_level_unique_values_dict['0c276508-d497-4523-a750-d044ec6d2c5f'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='B', node_name=node36_name, value=top_level_unique_values_dict['0675d7a4-f12b-47ed-92aa-7884c7ef0476'], initial_setup=True, is_output=False))
        GriptapeNodes.handle_request(SetParameterValueRequest(parameter_name='result', node_name=node36_name, value=top_level_unique_values_dict['0675d7a4-f12b-47ed-92aa-7884c7ef0476'], initial_setup=True, is_output=True))

def _ensure_workflow_context():
    context_manager = GriptapeNodes.ContextManager()
    if not context_manager.has_current_flow():
        top_level_flow_request = GetTopLevelFlowRequest()
        top_level_flow_result = GriptapeNodes.handle_request(top_level_flow_request)
        if isinstance(top_level_flow_result, GetTopLevelFlowResultSuccess) and top_level_flow_result.flow_name is not None:
            flow_manager = GriptapeNodes.FlowManager()
            flow_obj = flow_manager.get_flow_by_name(top_level_flow_result.flow_name)
            context_manager.push_flow(flow_obj)

def execute_workflow(input: dict, storage_backend: str='local', workflow_executor: WorkflowExecutor | None=None, pickle_control_flow_result: bool=False) -> dict | None:
    return asyncio.run(aexecute_workflow(input=input, storage_backend=storage_backend, workflow_executor=workflow_executor, pickle_control_flow_result=pickle_control_flow_result))

async def aexecute_workflow(input: dict, storage_backend: str='local', workflow_executor: WorkflowExecutor | None=None, pickle_control_flow_result: bool=False) -> dict | None:
    _ensure_workflow_context()
    storage_backend_enum = StorageBackend(storage_backend)
    workflow_executor = workflow_executor or LocalWorkflowExecutor(storage_backend=storage_backend_enum)
    async with workflow_executor as executor:
        await executor.arun(flow_input=input, pickle_control_flow_result=pickle_control_flow_result)
    return executor.output

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('--storage-backend', choices=['local', 'gtc'], default='local', help="Storage backend to use: 'local' for local filesystem or 'gtc' for Griptape Cloud")
    parser.add_argument('--json-input', default=None, help='JSON string containing parameter values. Takes precedence over individual parameter arguments if provided.')
    parser.add_argument('--execution_environment', default=None, help='Environment that the node should execute in')
    parser.add_argument('--job_group', default=None, help='Groupings of multiple nodes to send up as a Deadline Cloud job.')
    parser.add_argument('--exec_out', default=None, help='Connection to the next node in the execution chain')
    parser.add_argument('--topic', default=None, help='A story topic')
    args = parser.parse_args()
    flow_input = {}
    if args.json_input is not None:
        flow_input = json.loads(args.json_input)
    if args.json_input is None:
        if 'Start Flow' not in flow_input:
            flow_input['Start Flow'] = {}
        if args.execution_environment is not None:
            flow_input['Start Flow']['execution_environment'] = args.execution_environment
        if args.job_group is not None:
            flow_input['Start Flow']['job_group'] = args.job_group
        if args.exec_out is not None:
            flow_input['Start Flow']['exec_out'] = args.exec_out
        if args.topic is not None:
            flow_input['Start Flow']['topic'] = args.topic
    workflow_output = execute_workflow(input=flow_input, storage_backend=args.storage_backend)
    print(workflow_output)
